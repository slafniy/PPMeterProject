<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                    xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    xmlns:System="clr-namespace:System;assembly=mscorlib"
                    xmlns:noesis="clr-namespace:NoesisGUIExtensions;assembly=Noesis.GUI.Extensions"
                    xmlns:ls="clr-namespace:ls;assembly=Code"
                    mc:Ignorable="d">

    <DataTemplate x:Key="PPMeter_PartyLineTooltipTemplate" DataType="{x:Type ls:Character}">
        <StackPanel x:Name="root" ls:TooltipExtender.Owner="{Binding }" MinWidth="{StaticResource MinNarrowTooltipContentWidth}" MaxWidth="{StaticResource MaxNarrowTooltipContentWidth}">
            <Grid x:Name="mainStatsGrid">
                <Grid.Tag>
                    <!--current character is controlled by the current player-->
                    <MultiBinding Converter="{StaticResource EqualConverter}">
                        <Binding Path="OwnerDCWidget.CurrentPlayer.UserId" RelativeSource="{RelativeSource AncestorType={x:Type ls:LSTooltip}}"/>
                        <Binding Path="PlayerCharacterProperties.OwnerUserID"/>
                    </MultiBinding>
                </Grid.Tag>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <ContentControl Grid.ColumnSpan="2" HorizontalAlignment="Stretch" VerticalAlignment="Top" Template="{StaticResource TooltipStripTopBackground}" Tag="{Binding ElementName=TitleArea}" Margin="-36,-20,-36,-25" />

                <Canvas Grid.Column="1" Width="{Binding ActualWidth, ElementName=DecorationImage}" Margin="0,-85,-95,0">
                    <Image x:Name="DecorationImage"
                           Stretch="Uniform" MaxHeight="240" Panel.ZIndex="1" IsHitTestVisible="False" ls:MeasurementProperties.CalculateMeasures="True"
                           DataContext="{Binding Stats.ClassList[0]}" Style="{StaticResource MainClassIconStyle}"/>
                </Canvas>

                <!-- Name/Class/Level -->
                <StackPanel x:Name="TitleArea" Style="{StaticResource TooltipTitleSurround}" >
                    <TextBlock Style="{StaticResource TooltipTitleStyle}" Text="{Binding Name}"/>
                    <Control Template="{StaticResource LevelClassSubTitleTemplate}"/>
                </StackPanel>

            </Grid>

            <!-- Remaining time for summons -->
            <Control x:Name="durationDis" Template="{StaticResource SummonDurationTemplate}" Margin="-70,0,0,25"/>

            <Grid HorizontalAlignment="Stretch" x:Name="PlayerPanel" Margin="0,0,0,16" Visibility="{Binding ElementName=mainStatsGrid, Path=Tag, Converter={StaticResource BoolToCollapsedConverter}}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Border Grid.Column="0" Background="{Binding PlayerCharacterProperties.OwnerCommunityIcon, Mode=OneWay}" Width="60" Height="60" VerticalAlignment="Top">
                    <Border.Clip>
                        <EllipseGeometry Center="30,30" RadiusX="30" RadiusY="30"/>
                    </Border.Clip>
                </Border>
                <TextBlock Grid.Column="1" Text="{Binding PlayerCharacterProperties.OwnerPlayerName}" HorizontalAlignment="Stretch" Margin="12,0,0,0" TextWrapping="Wrap" FontSize="{StaticResource MiniFontSize}"/>
            </Grid>

            <!-- Stats -->
            <StackPanel x:Name="resourcesPanel" Margin="0,0,0,40">
                <b:Interaction.Behaviors>
                    <ls:CollectionFilterBehavior x:Name="SpecialFilter" ItemsSource="{Binding Stats.ActionResources}" Predicate="{Binding OwnerDCWidget.Data.ActionResourceSpecialPredicate, RelativeSource={RelativeSource AncestorType={x:Type ls:LSTooltip}}}"/>
                    <ls:CollectionFilterBehavior x:Name="SpecialFilterPinned" ItemsSource="{Binding Stats.ActionResources}" Predicate="{Binding OwnerDCWidget.Data.ActionResourceSpecialPredicate, RelativeSource={RelativeSource AncestorType={x:Type ls:LSElementCopy}}}"/>
                    <ls:CollectionFilterBehavior x:Name="CharacterInterruptsFilter" ItemsSource="{Binding PlayerCharacterProperties.Interrupts}" Predicate="{Binding PlayerCharacterProperties.CharacterInterruptsFilterPredicate}"/>
                </b:Interaction.Behaviors>

                <!--Statuses-->
                <TextBlock Style="{StaticResource TooltipTitleStyle}" FontSize="{StaticResource DefaultFontSize}" Text="{Binding Source='h71f6c964g24c2g49e5ga3fbg65bf2fd92790',Converter={StaticResource TranslatedStringConverter}}"
                           Visibility="{Binding StatusEffects.Count, Converter={StaticResource CountToVisibilityConverter}}"/>
                <ItemsControl x:Name="StatusList" Style="{StaticResource ActiveConditionsSection}" ItemTemplate="{StaticResource ActiveConditionCompleteTemplate}" ItemsSource="{Binding StatusEffects}">
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <StackPanel Orientation="Vertical"/>
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                </ItemsControl>

                <!--Reactions-->
                <StackPanel Orientation="Horizontal" Visibility="{Binding PlayerCharacterProperties.Interrupts.Count, Converter={StaticResource CountToVisibilityConverter}}">
                    <TextBlock Style="{StaticResource TooltipTitleStyle}" FontSize="{StaticResource DefaultFontSize}" VerticalAlignment="Center"
                               Text="{Binding Source='h2fda2a98g24aeg4745ga96fg486c04590c4e',Converter={StaticResource TranslatedStringConverter}}"/>
                    <ls:LSButton x:Name="ReactionsButton" VerticalAlignment="Center" Style="{StaticResource TooltipControllerButton}" Content="" Margin="-10,-20" Visibility="Collapsed"
                                 DataContext ="{Binding OwnerDCWidget.CurrentPlayer.UIData.InputEvents, Converter={StaticResource FindInputEventConverter}, ConverterParameter='UISort', RelativeSource={RelativeSource AncestorType={x:Type ls:LSTooltip}}}"/>
                </StackPanel>
                <ItemsControl x:Name="InterruptList" HorizontalAlignment="Stretch" ItemsSource="{Binding FilteredItems, ElementName=CharacterInterruptsFilter}" Visibility="{Binding ItemsSource.Count, RelativeSource={RelativeSource Mode=Self}, Converter={StaticResource CountToVisibilityConverter}}" ItemTemplate="{StaticResource InterruptCompleteTemplate}"
                              Template="{StaticResource MinimalItemsControlTemplate}">
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <StackPanel Orientation="Vertical"/>
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                </ItemsControl>
            </StackPanel>

            <!-- Footer -->
            <ls:LSNineSliceImage Style="{StaticResource TooltipStripBottomStyle}" x:Name="Footer" Visibility="Collapsed">
                <StackPanel VerticalAlignment="Center" HorizontalAlignment="Center" Margin="0,-8">
                    <StackPanel Orientation="Horizontal">
                        <ls:LSButton x:Name="UpButton" VerticalAlignment="Center" HorizontalAlignment="Center" CommandParameter="{Binding Path=DataContext, ElementName=root}"
                                 Style="{StaticResource TooltipControllerButton}" Command="{Binding OwnerDCWidget.StartLevelUp, RelativeSource={RelativeSource AncestorType={x:Type ls:LSTooltip}}}"
                                 DataContext ="{Binding OwnerDCWidget.CurrentPlayer.UIData.InputEvents, Converter={StaticResource FindInputEventConverter}, ConverterParameter='UITabNext', RelativeSource={RelativeSource AncestorType={x:Type ls:LSTooltip}}}"
                                 Content="{Binding Source='he3ccedd0gceaeg4b1fg8e74g9dfc6da58cd2',Converter={StaticResource TranslatedStringConverter}}"/>
                        <Border x:Name="LevelUp" Visibility="{Binding Visibility, ElementName=UpButton}" HorizontalAlignment="Left" VerticalAlignment="Center"
                            Width="90" Height="90" Margin="-20,0">
                            <Image x:Name="LevelUpIcon" Source="pack://application:,,,/Core;component/Assets/Shared_c/c_ico_levelup_2.png" Stretch="Uniform" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <Image x:Name="ListenIcon" Source="pack://application:,,,/Core;component/Assets/PlayerPortraits/ico_mode_dialogue.png" Width="120" VerticalAlignment="Center" Visibility="Collapsed" Margin="-30,0"/>
                        <ls:LSButton x:Name="ListenButton" VerticalAlignment="Center" Style="{StaticResource TooltipControllerButton}" Visibility="Collapsed" Margin="-10,0,0,10"
                                 DataContext ="{Binding OwnerDCWidget.CurrentPlayer.UIData.InputEvents, Converter={StaticResource FindInputEventConverter}, ConverterParameter='UIAccept', RelativeSource={RelativeSource AncestorType={x:Type ls:LSTooltip}}}"
                                 Content="{Binding Source='he26c9a8cg0e0ag45b5ga6ddg6ddb00255b51', Converter={StaticResource TranslatedStringConverter}}"/>
                    </StackPanel>

                    <TextBlock x:Name="ListenError" Text="{Binding Source='hadca0843g178eg4fe9ga196g0c08c8ae6302',Converter={StaticResource TranslatedStringConverter}}" Foreground="{StaticResource LS_alertTxtColor}" Visibility="Collapsed" TextWrapping="Wrap" Width="{Binding ActualWidth, ElementName=root}" FontSize="{StaticResource ScaledSmallFontSize}" TextAlignment="Center"/>
                </StackPanel>
            </ls:LSNineSliceImage>
        </StackPanel>

        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=OwnerDCWidget.Data.UIInputMethod, RelativeSource={RelativeSource AncestorType={x:Type ls:LSTooltip}}}" Value="Controller">
                <Setter TargetName="DecorationImage" Property="MaxHeight" Value="310" />
            </DataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding ElementName=mainStatsGrid, Path=Tag}" Value="False"/>
                    <Condition Binding="{Binding Path=DataContext.CharacterMode, ElementName=root}" Value="InDialogue"/>
                </MultiDataTrigger.Conditions>
                <Setter TargetName="ListenIcon" Property="Visibility" Value="Visible"/>
                <Setter TargetName="ListenButton" Property="Visibility" Value="Visible"/>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=OwnerDCWidget.CurrentPlayer.SelectedCharacter.CharacterMode, RelativeSource={RelativeSource AncestorType={x:Type ls:LSTooltip}}}" Value="InDialogue"/>
                    <Condition Binding="{Binding Path=DataContext.CharacterMode, ElementName=root}" Value="InDialogue"/>
                    <Condition Value="False">
                        <Condition.Binding>
                            <MultiBinding Converter="{StaticResource EqualConverter}">
                                <Binding Path="OwnerDCWidget.CurrentPlayer.SelectedCharacter" RelativeSource="{RelativeSource AncestorType={x:Type ls:LSTooltip}}"/>
                                <Binding Path="."/>
                            </MultiBinding>
                        </Condition.Binding>
                    </Condition>
                </MultiDataTrigger.Conditions>
                <Setter TargetName="ListenButton" Property="IsEnabled" Value="False"/>
                <Setter TargetName="ListenError" Property="Visibility" Value="Visible"/>
            </MultiDataTrigger>

            <DataTrigger Binding="{Binding ElementName=mainStatsGrid, Path=Tag}" Value="False">
                <Setter TargetName="UpButton" Property="Visibility" Value="Collapsed"/>
            </DataTrigger>

            <DataTrigger Binding="{Binding Path=DataContext.Stats.Level.LevelUpAvailable, ElementName=root}" Value="False">
                <Setter TargetName="UpButton" Property="Visibility" Value="Collapsed"/>
            </DataTrigger>

            <DataTrigger Binding="{Binding Path=DataContext.CharacterMode, ElementName=root}" Value="InCombat">
                <Setter TargetName="UpButton" Property="Visibility" Value="Collapsed"/>
            </DataTrigger>

            <DataTrigger Binding="{Binding Path=DataContext.DownedInfo.Active, ElementName=root}" Value="True">
                <Setter TargetName="UpButton" Property="Visibility" Value="Collapsed"/>
            </DataTrigger>

            <DataTrigger Binding="{Binding Path=DataContext.Stats.IsAlive, ElementName=root}" Value="False">
                <Setter TargetName="UpButton" Property="Visibility" Value="Collapsed"/>
            </DataTrigger>

            <DataTrigger Binding="{Binding OwnerDCWidget.CurrentPlayer.UIData.AllowInteraction, RelativeSource={RelativeSource AncestorType={x:Type ls:LSTooltip}}}" Value="False">
                <Setter TargetName="UpButton" Property="Visibility" Value="Collapsed"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding OwnerDCWidget.CurrentPlayer.UIData.AllowInteraction, RelativeSource={RelativeSource AncestorType={x:Type ls:LSElementCopy}}}" Value="False">
                <Setter TargetName="UpButton" Property="Visibility" Value="Collapsed"/>
            </DataTrigger>

            <DataTrigger Binding="{Binding StatusEffects.Count, Converter={StaticResource GreaterThanConverter}, ConverterParameter=10}" Value="True">
                <Setter TargetName="StatusList" Property="ItemTemplate" Value="{StaticResource SingleIconStatusTemplate}"/>
                <Setter TargetName="StatusList" Property="ItemsPanel">
                    <Setter.Value>
                        <ItemsPanelTemplate>
                            <WrapPanel/>
                        </ItemsPanelTemplate>
                    </Setter.Value>
                </Setter>
            </DataTrigger>

            <DataTrigger Binding="{Binding PlayerCharacterProperties.Interrupts.Count, Converter={StaticResource GreaterThanConverter}, ConverterParameter=10}" Value="True">
                <Setter TargetName="InterruptList" Property="ItemTemplate" Value="{StaticResource SingleIconInterruptTemplate}"/>
                <Setter TargetName="InterruptList" Property="ItemsPanel">
                    <Setter.Value>
                        <ItemsPanelTemplate>
                            <WrapPanel/>
                        </ItemsPanelTemplate>
                    </Setter.Value>
                </Setter>
            </DataTrigger>

            <DataTrigger Binding="{Binding Path=OwnerDCWidget.CurrentPlayer.UIOptions.ExtraTooltipDescriptions, RelativeSource={RelativeSource AncestorType={x:Type ls:LSElementCopy}}}" Value="WhenPinned">
                <Setter TargetName="mainStatsGrid" Property="Tag">
                    <Setter.Value>
                        <MultiBinding Converter="{StaticResource EqualConverter}">
                            <Binding Path="OwnerDCWidget.CurrentPlayer.UserId" RelativeSource="{RelativeSource AncestorType={x:Type ls:LSElementCopy}}"/>
                            <Binding Path="PlayerCharacterProperties.OwnerUserID"/>
                        </MultiBinding>
                    </Setter.Value>
                </Setter>
                <Setter TargetName="StatusList" Property="ItemTemplate" Value="{StaticResource ActiveConditionCompleteTemplate}"/>
                <Setter TargetName="StatusList" Property="ItemsPanel">
                    <Setter.Value>
                        <ItemsPanelTemplate>
                            <StackPanel Orientation="Vertical"/>
                        </ItemsPanelTemplate>
                    </Setter.Value>
                </Setter>
                <Setter TargetName="InterruptList" Property="ItemTemplate" Value="{StaticResource InterruptCompleteTemplate}"/>
                <Setter TargetName="InterruptList" Property="ItemsPanel">
                    <Setter.Value>
                        <ItemsPanelTemplate>
                            <StackPanel Orientation="Vertical"/>
                        </ItemsPanelTemplate>
                    </Setter.Value>
                </Setter>
            </DataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding CharacterType}" Value="Avatar"/>
                    <Condition Binding="{Binding Path=OwnerDCWidget.Data.UIInputMethod, RelativeSource={RelativeSource AncestorType={x:Type ls:LSTooltip}}}" Value="Controller"/>
                </MultiDataTrigger.Conditions>
                <Setter TargetName="Footer" Property="Visibility" Value="Visible"/>
                <Setter TargetName="ReactionsButton" Property="Visibility" Value="Visible"/>
            </MultiDataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding CharacterType}" Value="Companion"/>
                    <Condition Binding="{Binding Path=OwnerDCWidget.Data.UIInputMethod, RelativeSource={RelativeSource AncestorType={x:Type ls:LSTooltip}}}" Value="Controller"/>
                </MultiDataTrigger.Conditions>
                <Setter TargetName="Footer" Property="Visibility" Value="Visible"/>
                <Setter TargetName="ReactionsButton" Property="Visibility" Value="Visible"/>
            </MultiDataTrigger>

            <DataTrigger Binding="{Binding Lifetime}" Value="0">
                <Setter TargetName="durationDis" Property="Visibility" Value="Collapsed" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Lifetime}" Value="-1">
                <Setter TargetName="durationDis" Property="Visibility" Value="Collapsed" />
            </DataTrigger>

            <DataTrigger Binding="{Binding Path=OwnerDCWidget.IsConsolePlatform, RelativeSource={RelativeSource AncestorType={x:Type ls:LSTooltip}}}" Value="True">
                <Setter TargetName="PlayerPanel" Property="Visibility" Value="Visible"/>
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

</ResourceDictionary>