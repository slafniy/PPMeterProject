<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:System="clr-namespace:System;assembly=mscorlib"
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
					xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
			        xmlns:b="http://schemas.microsoft.com/xaml/behaviors"

                    xmlns:ls="clr-namespace:ls;assembly=Code"
                    xmlns:noesis="clr-namespace:NoesisGUIExtensions;assembly=Noesis.GUI.Extensions"
					mc:Ignorable="d">

    <!-- CharacterPortrait Template -->
    <DataTemplate x:Key="PPMeter_CharacterPortrait">
        <DataTemplate.Resources>
            <ImageSource x:Key="SuccessActive">pack://application:,,,/Core;component/Assets/PlayerPortraits/portrait_tallyUp_active.png</ImageSource>
            <ImageSource x:Key="SuccessInactive">pack://application:,,,/Core;component/Assets/PlayerPortraits/portrait_tallyUp_inActive.png</ImageSource>
            <ImageSource x:Key="FailureActive">pack://application:,,,/Core;component/Assets/PlayerPortraits/portrait_tallyDown_active.png</ImageSource>
            <ImageSource x:Key="FailureInactive">pack://application:,,,/Core;component/Assets/PlayerPortraits/portrait_tallyDown_inActive.png</ImageSource>
            <ImageSource x:Key="ListenBgTop">pack://application:,,,/Core;component/Assets/ListenIn/listenBg_top.png</ImageSource>
            <ImageSource x:Key="ListenBgBot">pack://application:,,,/Core;component/Assets/ListenIn/listenBg_bottom.png</ImageSource>
            <BitmapImage x:Key="StatusBg" UriSource="pack://application:,,,/Core;component/Assets/BottomBar/statusBG.png" />
            <BitmapImage x:Key="StatusBgFill" UriSource="pack://application:,,,/Core;component/Assets/BottomBar/statusBG_fill.png" />
        </DataTemplate.Resources>

        <StackPanel Orientation="Horizontal" VerticalAlignment="Bottom">
            <ls:LSContentControl x:Name="ParentControl" Background="Transparent" >
                <b:Interaction.Behaviors>
                    <ls:DropOnCharacterBehavior TargetCharacter="{Binding}" DropExtraCommand="{Binding DataContext.DropFollowerOrSummonCommand, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" DropExtraCommandParameter="{Binding ElementName=FollowersUnlinked}"/>
                </b:Interaction.Behaviors>
                <ls:LSContentControl.Tag>
                    <MultiBinding Converter="{StaticResource EqualConverter}">
                        <Binding RelativeSource="{RelativeSource AncestorType={x:Type ls:UIWidget}}" Path="DataContext.CurrentPlayer.UserId"/>
                        <Binding Path="PlayerCharacterProperties.OwnerUserID"/>
                    </MultiBinding>
                </ls:LSContentControl.Tag>

                <Grid x:Name="baseGrid">
                    <ls:LSInputBinding x:Name="SelectCharacterInput"
                                   PlayerId="{Binding DataContext.CurrentPlayer.PlayerId, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" IsEnabled="False">
                        <b:Interaction.Triggers>
                            <b:EventTrigger  EventName="LSInputBindingPressed">
                                <b:InvokeCommandAction Command="{Binding DataContext.SelectCharacter,RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" CommandParameter="{Binding}" />
                                <b:InvokeCommandAction Command="{Binding DataContext.PlaySelectCharacterReaction,RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" CommandParameter="{Binding}"/>
                                <ls:LSPlaySound Sound="UI_HUD_SelectCharacter"/>
                            </b:EventTrigger>
                        </b:Interaction.Triggers>
                    </ls:LSInputBinding>

                    <ls:LSInputBinding x:Name="CameraResetInput"
                                   PlayerId="{Binding DataContext.CurrentPlayer.PlayerId, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" Command="{Binding DataContext.SetCameraOnGameObject,RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}"  CommandParameter="{Binding}"/>

                    <StackPanel Orientation="Horizontal" VerticalAlignment="Bottom">

                        <ContentControl Panel.ZIndex="2">
                            <b:Interaction.Triggers>
                                <b:EventTrigger EventName="MouseLeftButtonUp" >
                                    <b:InvokeCommandAction IsEnabled="{Binding DataContext.CurrentPlayer.SelectedCharacter.PlayerCharacterProperties.IsCasting, Converter={StaticResource InvertBoolConverter}, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" Command="{Binding DataContext.SelectCharacter,RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" CommandParameter="{Binding}" />
                                    <b:InvokeCommandAction IsEnabled="{Binding DataContext.CurrentPlayer.SelectedCharacter.PlayerCharacterProperties.IsCasting, Converter={StaticResource InvertBoolConverter}, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" Command="{Binding DataContext.PlaySelectCharacterReaction,RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" CommandParameter="{Binding}" />
                                    <b:InvokeCommandAction Command="{Binding DataContext.TargetGameobjectCommand, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" CommandParameter="{Binding}"/>
                                    <ls:LSPlaySound Sound="UI_HUD_SelectCharacter"/>
                                </b:EventTrigger>
                                <b:EventTrigger EventName="MouseDoubleClick" >
                                    <b:InvokeCommandAction Command="{Binding DataContext.SetCameraOnGameObject,RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" CommandParameter="{Binding}" />
                                </b:EventTrigger>
                                <b:EventTrigger EventName="MouseEnter">
                                    <b:InvokeCommandAction Command="{Binding DataContext.HighlightGameobject, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" CommandParameter="{Binding}"/>
                                    <ls:LSPlaySound Sound="UI_Shared_Hover"/>
                                    <b:ChangePropertyAction TargetName="FrameHighlight" PropertyName="Visibility" Value="Visible" />
                                </b:EventTrigger>
                                <b:EventTrigger EventName="MouseLeave">
                                    <b:InvokeCommandAction Command="{Binding DataContext.ClearHighlightGameobject, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" CommandParameter="{Binding}"/>
                                    <b:ChangePropertyAction TargetName="FrameHighlight" PropertyName="Visibility" Value="Collapsed" />
                                </b:EventTrigger>
                            </b:Interaction.Triggers>

                            <Grid Style="{StaticResource PortraitGridStyle}" MaxHeight="{Binding ActualHeight, ElementName=FrameHighlight}">
                                <ls:LSEntityObject EntityRef="{Binding EntityHandle}" Background="Transparent" Margin="0,-3,0,-3" Opacity="1">
                                    <ls:LSEntityObject.ToolTip>
                                        <ls:LSTooltip Content="{TemplateBinding DataContext}" ContentTemplate="{StaticResource PartyLineTooltipTemplate}" ls:TooltipExtender.Owner="{Binding Path=DataContext, ElementName=ParentControl}" Placement="Right" VerticalOffset="-18" CanBePinned="True"/>
                                    </ls:LSEntityObject.ToolTip>
                                    <Grid IsHitTestVisible="False">
                                        <!--PORTRAITS-->
                                        <ContentControl x:Name="Portraits" Content="{Binding .}" ContentTemplate="{StaticResource CharacterPortraitTemplate}" />
                                        <Image x:Name="Frame" Source="pack://application:,,,/Core;component/Assets/PlayerPortraits/portrait_frame_inactive_d.png" Stretch="None"/>
                                        <Image x:Name="FrameHighlight" Source="pack://application:,,,/Core;component/Assets/PlayerPortraits/portrait_frame_inactive_h.png" Stretch="None" Visibility="Hidden"/>
                                        <Control x:Name="CharacterMode" Template="{StaticResource CharacterModeIcon}" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="-35,0,0,0" />
                                    </Grid>

                                    <Grid x:Name="AvatarCrown" VerticalAlignment="Top" HorizontalAlignment="Right" Margin="0,-18,-14,-80" Width="104" Height="104" Visibility="Collapsed">
                                        <Image VerticalAlignment="Top" HorizontalAlignment="Center" Style="{StaticResource AvatarCrownImageStyle}" IsHitTestVisible="False"/>
                                        <Border VerticalAlignment="Center" HorizontalAlignment="Center" Width="50" Height="50" Background="Transparent">
                                            <Border.ToolTip>
                                                <ls:LSTooltip IsHitTestVisible="False" Placement="Top" VerticalOffset="-2">
                                                    <TextBlock Text="{Binding Source='h15fc75eeg6c56g42e5g8882gbfdd714c5845', Converter={StaticResource TranslatedStringConverter}}" Style="{StaticResource TooltipBaseTextStyle}"/>
                                                </ls:LSTooltip>
                                            </Border.ToolTip>
                                        </Border>
                                    </Grid>

                                    <ls:LSButton x:Name="LevelUpButton" HorizontalAlignment="Left" VerticalAlignment="Top" Command="{Binding DataContext.StartLevelUp, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" CommandParameter="{Binding .}" Width="90" Height="90">
                                        <ls:LSButton.ToolTip>
                                            <ls:LSTooltip IsHitTestVisible="False" Placement="Top" VerticalOffset="6">
                                                <TextBlock Text="{Binding Source='h279c7a26gafe3g440cgb460g878bbfc0bdc0', Converter={StaticResource TranslatedStringConverter}}" Style="{StaticResource TooltipBaseTextStyle}"/>
                                            </ls:LSTooltip>
                                        </ls:LSButton.ToolTip>
                                        <ls:LSButton.Template>
                                            <ControlTemplate TargetType="ls:LSButton">
                                                <Image x:Name="img" Source="{StaticResource IconLevelUpArrow}" Stretch="Uniform" Width="60" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="-30,-30,0,0"/>
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="IsMouseOver" Value="True">
                                                        <Setter Property="Source" Value="pack://application:,,,/Core;component/Assets/Shared/ico_levelUp_h.png" TargetName="img"/>
                                                    </Trigger>

                                                    <DataTrigger Binding="{Binding DataContext.CurrentPlayer.UIData.AllowInteraction, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" Value="False">
                                                        <Setter Property="IsEnabled" Value="False"/>
                                                    </DataTrigger>

                                                    <Trigger Property="IsEnabled" Value="False">
                                                        <Setter Property="Opacity" Value="{StaticResource DisabledOpacity}" TargetName="img"/>
                                                    </Trigger>

                                                    <DataTrigger Binding="{Binding IsVisible, RelativeSource={RelativeSource Self}}" Value="True">
                                                        <DataTrigger.EnterActions>
                                                            <BeginStoryboard x:Name="IconBounce">
                                                                <BeginStoryboard.Storyboard>
                                                                    <Storyboard>
                                                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Width" Storyboard.TargetName="img" RepeatBehavior="Forever">
                                                                            <EasingDoubleKeyFrame KeyTime="{StaticResource LevelUpArrowAnimationFrame1}" Value="{StaticResource LevelUpArrowAnimationFrameSmallSize}"/>
                                                                            <EasingDoubleKeyFrame KeyTime="{StaticResource LevelUpArrowAnimationFrame2}" Value="{StaticResource LevelUpArrowAnimationFrameSmallSize}"/>
                                                                            <EasingDoubleKeyFrame KeyTime="{StaticResource LevelUpArrowAnimationFrame3}" Value="{StaticResource LevelUpArrowAnimationFrameBigSize}"/>
                                                                            <EasingDoubleKeyFrame KeyTime="{StaticResource LevelUpArrowAnimationFrame4}" Value="{StaticResource LevelUpArrowAnimationFrameSmallSize}"/>
                                                                        </DoubleAnimationUsingKeyFrames>
                                                                    </Storyboard>
                                                                </BeginStoryboard.Storyboard>
                                                            </BeginStoryboard>
                                                        </DataTrigger.EnterActions>
                                                        <DataTrigger.ExitActions>
                                                            <StopStoryboard BeginStoryboardName="IconBounce"/>
                                                        </DataTrigger.ExitActions>
                                                    </DataTrigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </ls:LSButton.Template>
                                    </ls:LSButton>

                                    <Rectangle x:Name="DownedBg" Height="{Binding ActualHeight, ElementName=DownedStatus}" Margin="-28,0" HorizontalAlignment="Left" VerticalAlignment="Center" Width="70" Visibility="Collapsed">
                                        <Rectangle.Fill>
                                            <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                                <LinearGradientBrush.GradientStops>
                                                    <GradientStop Color="#00000000" Offset="0" />
                                                    <GradientStop Color="#CF000000" Offset="0.08" />
                                                    <GradientStop Color="#FF000000" Offset="0.2" />
                                                    <GradientStop Color="#FF000000" Offset="0.8" />
                                                    <GradientStop Color="#CF000000" Offset="0.92" />
                                                    <GradientStop Color="#00000000" Offset="1" />
                                                </LinearGradientBrush.GradientStops>
                                            </LinearGradientBrush>
                                        </Rectangle.Fill>
                                        <Rectangle.OpacityMask>
                                            <LinearGradientBrush StartPoint="0,0.5" EndPoint="1,0.5">
                                                <LinearGradientBrush.GradientStops>
                                                    <GradientStop Color="#00000000" Offset="0.1" />
                                                    <GradientStop Color="#FF000000" Offset="0.3" />
                                                    <GradientStop Color="#FF000000" Offset="0.7" />
                                                    <GradientStop Color="#00000000" Offset="0.9" />
                                                </LinearGradientBrush.GradientStops>
                                            </LinearGradientBrush>
                                        </Rectangle.OpacityMask>
                                    </Rectangle>

                                    <StackPanel x:Name="DownedStatus" Margin="-28,0" HorizontalAlignment="Left" VerticalAlignment="Center" Width="70" Visibility="Collapsed">
                                        <Image x:Name="SuccessIII" Stretch="None" Margin="0,0,0,-20" VerticalAlignment="Top" Source="{StaticResource SuccessInactive}"/>
                                        <Image x:Name="SuccessII" Stretch="None" Margin="0,0,0,-20" VerticalAlignment="Top" Source="{StaticResource SuccessInactive}"/>
                                        <Image x:Name="SuccessI" Stretch="None" Margin="0,0,0,0" VerticalAlignment="Top" Source="{StaticResource SuccessInactive}"/>

                                        <Image x:Name="DownedStatusIcon" VerticalAlignment="Center" Source="pack://application:,,,/Core;component/Assets/PlayerPortraits/ico_downed.png" Stretch="None"/>

                                        <Image x:Name="FailureI" Stretch="None" Margin="0,0,0,0" VerticalAlignment="Bottom" Source="{StaticResource FailureInactive}"/>
                                        <Image x:Name="FailureII" Stretch="None" Margin="0,-20,0,0" VerticalAlignment="Bottom" Source="{StaticResource FailureInactive}"/>
                                        <Image x:Name="FailureIII" Stretch="None" Margin="0,-20,0,0" VerticalAlignment="Bottom" Source="{StaticResource FailureInactive}"/>
                                    </StackPanel>

                                </ls:LSEntityObject>
                            </Grid>

                        </ContentControl>

                        <Control x:Name="ListenInGrid" Margin="-27,0" Panel.ZIndex="5" Visibility="Collapsed">
                            <Control.Template>
                                <ControlTemplate>
                                    <Grid>
                                        <Image x:Name="BgTop" Source="{StaticResource ListenBgTop}" HorizontalAlignment="Center" VerticalAlignment="Top" Stretch="None" Margin="0,-3,0,0"/>
                                        <Image x:Name="BgBot" Source="{StaticResource ListenBgBot}" HorizontalAlignment="Center" VerticalAlignment="Bottom" Stretch="None" Margin="0,0,0,-3"/>

                                        <ls:LSButton x:Name="ListenToDialog" HorizontalAlignment="Center" VerticalAlignment="Center"
                                            Command="{Binding DataContext.ListenToDialog, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" CommandParameter="{Binding}"
                                            BoundEvent="ToggleGroupMode" IsEnabled="{Binding DataContext.CurrentPlayer.UIData.InPlayerPanels, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}, Converter={StaticResource InvertBoolConverter}}" >
                                            <ls:LSButton.Template>
                                                <ControlTemplate TargetType="ls:LSButton">
                                                    <ControlTemplate.Resources>
                                                        <BitmapImage x:Key="btnNormal" UriSource="pack://application:,,,/Core;component/Assets/ListenIn/btn.png"/>
                                                        <BitmapImage x:Key="btnHover" UriSource="pack://application:,,,/Core;component/Assets/ListenIn/btn.png" />
                                                        <BitmapImage x:Key="btnPressed" UriSource="pack://application:,,,/Core;component/Assets/ListenIn/btn.png" />
                                                        <BitmapImage x:Key="btnDisabled" UriSource="pack://application:,,,/Core;component/Assets/ListenIn/btn.png" />
                                                        <BitmapImage x:Key="btnBackground" UriSource="pack://application:,,,/Core;component/Assets/ListenIn/listenBg_btn.png" />
                                                        <BitmapImage x:Key="trail" UriSource="pack://application:,,,/Core;component/Assets/ListenIn/trail.png" />
                                                        <BitmapImage x:Key="playIcon" UriSource="pack://application:,,,/Core;component/Assets/ListenIn/ico_play.png" />
                                                        <BitmapImage x:Key="Icon_Normal" UriSource="pack://application:,,,/Core;component/Assets/ListenIn/ico_ear.png" />
                                                        <BitmapImage x:Key="Icon_Hover" UriSource="pack://application:,,,/Core;component/Assets/ListenIn/ico_ear.png" />
                                                        <BitmapImage x:Key="Icon_Pressed" UriSource="pack://application:,,,/Core;component/Assets/ListenIn/ico_ear.png" />
                                                    </ControlTemplate.Resources>

                                                    <Grid>
                                                        <Image x:Name="BtnBackground" Source="{StaticResource btnBackground}" HorizontalAlignment="Center" VerticalAlignment="Center" Stretch="None" RenderTransformOrigin="0.5 0.5">
                                                            <Image.RenderTransform>
                                                                <ScaleTransform x:Name="BtnBackgroundTransform" ScaleX="1" ScaleY="1"/>
                                                            </Image.RenderTransform>
                                                        </Image>

                                                        <Image x:Name="BtnBg" Source="{StaticResource btnNormal}" HorizontalAlignment="Center" VerticalAlignment="Center" Stretch="None" RenderTransformOrigin="0.5 0.5">
                                                            <Image.RenderTransform>
                                                                <ScaleTransform x:Name="BtnBgTransform" ScaleX="0" ScaleY="0"/>
                                                            </Image.RenderTransform>
                                                        </Image>

                                                        <Grid x:Name="IconGrid">
                                                            <Image x:Name="icon" Source="{StaticResource Icon_Normal}" HorizontalAlignment="Center" VerticalAlignment="Center" Stretch="None" RenderTransformOrigin="0.5 0.5">
                                                                <Image.RenderTransform>
                                                                    <ScaleTransform x:Name="iconTransform" ScaleX="1" ScaleY="1"/>
                                                                </Image.RenderTransform>
                                                            </Image>
                                                            <Image x:Name="trail" Source="{StaticResource trail}" HorizontalAlignment="Center" VerticalAlignment="Center" Stretch="None" RenderTransformOrigin="0.5 0.5">
                                                                <Image.RenderTransform>
                                                                    <RotateTransform x:Name="trailTransform" Angle="0"/>
                                                                </Image.RenderTransform>
                                                            </Image>
                                                            <Image x:Name="play1" Source="{StaticResource playIcon}" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,23,0" Stretch="None" RenderTransformOrigin="0.5 0.5">
                                                                <Image.RenderTransform>
                                                                    <TranslateTransform x:Name="play1Transform" X="0"/>
                                                                </Image.RenderTransform>
                                                            </Image>
                                                            <Image x:Name="play2" Source="{StaticResource playIcon}" Opacity="0" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,23,0" Stretch="None" RenderTransformOrigin="0.5 0.5">
                                                                <Image.RenderTransform>
                                                                    <TranslateTransform x:Name="play2Transform" X="0"/>
                                                                </Image.RenderTransform>
                                                            </Image>
                                                        </Grid>
                                                    </Grid>

                                                    <ControlTemplate.Triggers>
                                                        <Trigger Property="IsMouseOver" Value="True">
                                                            <Setter TargetName="BtnBg" Property="Source" Value="{StaticResource btnHover}"/>
                                                            <Setter TargetName="icon" Property="Source" Value="{StaticResource Icon_Hover}" />
                                                        </Trigger>
                                                        <Trigger Property="IsPressed" Value="True">
                                                            <Setter TargetName="BtnBg" Property="Source" Value="{StaticResource btnPressed}" />
                                                            <Setter TargetName="icon" Property="Source" Value="{StaticResource Icon_Pressed}" />
                                                            <Setter TargetName="icon" Property="Margin" Value="0,4,0,0" />
                                                        </Trigger>
                                                        <Trigger Property="IsEnabled" Value="False">
                                                            <Setter TargetName="BtnBg" Property="Source" Value="{StaticResource btnDisabled}" />
                                                            <Setter TargetName="icon" Property="Opacity" Value="0.7" />
                                                        </Trigger>
                                                        <Trigger Property="IsVisible" Value="True">
                                                            <Trigger.EnterActions>
                                                                <BeginStoryboard x:Name="ListenButtonAnimation">
                                                                    <Storyboard>
                                                                        <!-- Animations OnStart-->
                                                                        <DoubleAnimation Storyboard.TargetName="BtnBackgroundTransform" Storyboard.TargetProperty="ScaleX" Duration="0:0:0.6" From="1.4" To="1">
                                                                            <DoubleAnimation.EasingFunction>
                                                                                <ElasticEase EasingMode="EaseOut" Oscillations="1"/>
                                                                            </DoubleAnimation.EasingFunction>
                                                                        </DoubleAnimation>
                                                                        <DoubleAnimation Storyboard.TargetName="BtnBackgroundTransform" Storyboard.TargetProperty="ScaleY" Duration="0:0:0.6" From="1.4" To="1">
                                                                            <DoubleAnimation.EasingFunction>
                                                                                <ElasticEase EasingMode="EaseOut" Oscillations="1"/>
                                                                            </DoubleAnimation.EasingFunction>
                                                                        </DoubleAnimation>

                                                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="BtnBgTransform" Storyboard.TargetProperty="ScaleX">
                                                                            <LinearDoubleKeyFrame Value="0" KeyTime="0:0:0.0"/>
                                                                            <LinearDoubleKeyFrame Value="0" KeyTime="0:0:0.4"/>
                                                                            <EasingDoubleKeyFrame Value="1" KeyTime="0:0:0.8">
                                                                                <EasingDoubleKeyFrame.EasingFunction>
                                                                                    <ElasticEase EasingMode="EaseOut" Oscillations="1" Springiness="8"/>
                                                                                </EasingDoubleKeyFrame.EasingFunction>
                                                                            </EasingDoubleKeyFrame>
                                                                        </DoubleAnimationUsingKeyFrames>
                                                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="BtnBgTransform" Storyboard.TargetProperty="ScaleY">
                                                                            <LinearDoubleKeyFrame Value="0" KeyTime="0:0:0.0"/>
                                                                            <LinearDoubleKeyFrame Value="0" KeyTime="0:0:0.4"/>
                                                                            <EasingDoubleKeyFrame Value="1" KeyTime="0:0:0.8">
                                                                                <EasingDoubleKeyFrame.EasingFunction>
                                                                                    <ElasticEase EasingMode="EaseOut" Oscillations="1" Springiness="8"/>
                                                                                </EasingDoubleKeyFrame.EasingFunction>
                                                                            </EasingDoubleKeyFrame>
                                                                        </DoubleAnimationUsingKeyFrames>
                                                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="BtnBg" Storyboard.TargetProperty="Opacity">
                                                                            <LinearDoubleKeyFrame Value="0" KeyTime="0:0:0"/>
                                                                            <LinearDoubleKeyFrame Value="0" KeyTime="0:0:0.4"/>
                                                                            <LinearDoubleKeyFrame Value="1" KeyTime="0:0:0.55"/>
                                                                        </DoubleAnimationUsingKeyFrames>

                                                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="BtnBackground" Storyboard.TargetProperty="Opacity">
                                                                            <LinearDoubleKeyFrame Value="0" KeyTime="0:0:0"/>
                                                                            <LinearDoubleKeyFrame Value="1" KeyTime="0:0:0.2"/>
                                                                        </DoubleAnimationUsingKeyFrames>

                                                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="IconGrid" Storyboard.TargetProperty="Opacity">
                                                                            <LinearDoubleKeyFrame Value="0" KeyTime="0:0:0"/>
                                                                            <LinearDoubleKeyFrame Value="0" KeyTime="0:0:0.6"/>
                                                                            <LinearDoubleKeyFrame Value="1" KeyTime="0:0:0.8"/>
                                                                        </DoubleAnimationUsingKeyFrames>

                                                                        <!-- Animations Forever-->
                                                                        <DoubleAnimation Storyboard.TargetName="trailTransform" Storyboard.TargetProperty="Angle" From="0" To="360" RepeatBehavior="Forever" Duration="0:0:3"/>
                                                                        <DoubleAnimation Storyboard.TargetName="play1Transform" Storyboard.TargetProperty="X" From="-18" To="0" RepeatBehavior="Forever" Duration="0:0:1.6"/>
                                                                        <DoubleAnimation Storyboard.TargetName="play2Transform" Storyboard.TargetProperty="X" From="-18" To="0" RepeatBehavior="Forever" Duration="0:0:1.6" BeginTime="0:0:0.8"/>

                                                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="play1" Storyboard.TargetProperty="Opacity" RepeatBehavior="Forever">
                                                                            <LinearDoubleKeyFrame Value="0" KeyTime="0:0:0"/>
                                                                            <LinearDoubleKeyFrame Value="1" KeyTime="0:0:0.8"/>
                                                                            <LinearDoubleKeyFrame Value="1" KeyTime="0:0:1.2"/>
                                                                            <LinearDoubleKeyFrame Value="0" KeyTime="0:0:1.6"/>
                                                                        </DoubleAnimationUsingKeyFrames>
                                                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="play2" Storyboard.TargetProperty="Opacity" RepeatBehavior="Forever" BeginTime="0:0:0.8">
                                                                            <LinearDoubleKeyFrame Value="0" KeyTime="0:0:0"/>
                                                                            <LinearDoubleKeyFrame Value="1" KeyTime="0:0:0.8"/>
                                                                            <LinearDoubleKeyFrame Value="1" KeyTime="0:0:1.2"/>
                                                                            <LinearDoubleKeyFrame Value="0" KeyTime="0:0:1.6"/>
                                                                        </DoubleAnimationUsingKeyFrames>

                                                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="iconTransform" Storyboard.TargetProperty="ScaleX" RepeatBehavior="Forever">
                                                                            <LinearDoubleKeyFrame Value="1" KeyTime="0:0:0"/>
                                                                            <LinearDoubleKeyFrame Value="1.05" KeyTime="0:0:0.8"/>
                                                                            <LinearDoubleKeyFrame Value="1" KeyTime="0:0:1.6"/>
                                                                        </DoubleAnimationUsingKeyFrames>
                                                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="iconTransform" Storyboard.TargetProperty="ScaleY" RepeatBehavior="Forever">
                                                                            <LinearDoubleKeyFrame Value="1" KeyTime="0:0:0"/>
                                                                            <LinearDoubleKeyFrame Value="1.05" KeyTime="0:0:0.8"/>
                                                                            <LinearDoubleKeyFrame Value="1" KeyTime="0:0:1.6"/>
                                                                        </DoubleAnimationUsingKeyFrames>
                                                                    </Storyboard>
                                                                </BeginStoryboard>
                                                            </Trigger.EnterActions>
                                                            <Trigger.ExitActions>
                                                                <StopStoryboard BeginStoryboardName="ListenButtonAnimation"/>
                                                            </Trigger.ExitActions>
                                                        </Trigger>
                                                    </ControlTemplate.Triggers>
                                                </ControlTemplate>
                                            </ls:LSButton.Template>
                                            <ls:LSButton.ToolTip>
                                                <ls:LSTooltip Content="{Binding Source='h182e2a31gc475g436egb05cga8b95d58b7a8',Converter={StaticResource TranslatedStringConverter}}"/>
                                            </ls:LSButton.ToolTip>
                                        </ls:LSButton>
                                    </Grid>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsVisible" Value="True">
                                            <Trigger.EnterActions>
                                                <BeginStoryboard>
                                                    <Storyboard FillBehavior="Stop">
                                                        <ThicknessAnimation Storyboard.TargetName="BgTop" Storyboard.TargetProperty="Margin" From="0,-20,0,0" To="0,-3,0,0" Duration="0:0:0.3"/>
                                                        <DoubleAnimation Storyboard.TargetName="BgTop" Storyboard.TargetProperty="Opacity" From="0" To="1" Duration="0:0:0.1"/>
                                                        <ThicknessAnimation Storyboard.TargetName="BgBot" Storyboard.TargetProperty="Margin" From="0,0,0,-20" To="0,0,0,-3" Duration="0:0:0.3"/>
                                                        <DoubleAnimation Storyboard.TargetName="BgBot" Storyboard.TargetProperty="Opacity" From="0" To="1" Duration="0:0:0.1"/>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </Trigger.EnterActions>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Control.Template>
                        </Control>

                        <Control x:Name="CheckRewardGrid" Margin="-27,0" Panel.ZIndex="5" Visibility="Collapsed">
                            <Control.Template>
                                <ControlTemplate>
                                    <Grid>
                                        <Image x:Name="BgTop" Source="{StaticResource ListenBgTop}" HorizontalAlignment="Center" VerticalAlignment="Top" Stretch="None" Margin="0,-3,0,0"/>
                                        <Image x:Name="BgBot" Source="{StaticResource ListenBgBot}" HorizontalAlignment="Center" VerticalAlignment="Bottom" Stretch="None" Margin="0,0,0,-3"/>

                                        <ls:LSButton x:Name="CheckRewardButton" HorizontalAlignment="Center" VerticalAlignment="Center"
                                            Command="{Binding DataContext.CheckReward, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" CommandParameter="{Binding}"
                                            BoundEvent="ToggleGroupMode" IsEnabled="{Binding DataContext.CurrentPlayer.UIData.InPlayerPanels, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}, Converter={StaticResource InvertBoolConverter}}" >
                                            <ls:LSButton.Template>
                                                <ControlTemplate TargetType="ls:LSButton">
                                                    <ControlTemplate.Resources>
                                                        <BitmapImage x:Key="btnNormal" UriSource="pack://application:,,,/Core;component/Assets/ListenIn/btn.png"/>
                                                        <BitmapImage x:Key="btnHover" UriSource="pack://application:,,,/Core;component/Assets/ListenIn/btn.png" />
                                                        <BitmapImage x:Key="btnPressed" UriSource="pack://application:,,,/Core;component/Assets/ListenIn/btn.png" />
                                                        <BitmapImage x:Key="btnDisabled" UriSource="pack://application:,,,/Core;component/Assets/ListenIn/btn.png" />
                                                        <BitmapImage x:Key="btnBackground" UriSource="pack://application:,,,/Core;component/Assets/ListenIn/listenBg_btn.png" />
                                                        <BitmapImage x:Key="trail" UriSource="pack://application:,,,/Core;component/Assets/ListenIn/trail.png" />
                                                        <BitmapImage x:Key="Icon_Normal" UriSource="pack://application:,,,/Core;component/Assets/Reward/ico_reward_listen.png" />
                                                        <BitmapImage x:Key="Icon_Hover" UriSource="pack://application:,,,/Core;component/Assets/Reward/ico_reward_listen.png" />
                                                        <BitmapImage x:Key="Icon_Pressed" UriSource="pack://application:,,,/Core;component/Assets/Reward/ico_reward_listen.png" />
                                                    </ControlTemplate.Resources>

                                                    <Grid>
                                                        <Image x:Name="BtnBackground" Source="{StaticResource btnBackground}" HorizontalAlignment="Center" VerticalAlignment="Center" Stretch="None" RenderTransformOrigin="0.5 0.5">
                                                            <Image.RenderTransform>
                                                                <ScaleTransform x:Name="BtnBackgroundTransform" ScaleX="1" ScaleY="1"/>
                                                            </Image.RenderTransform>
                                                        </Image>

                                                        <Image x:Name="BtnBg" Source="{StaticResource btnNormal}" HorizontalAlignment="Center" VerticalAlignment="Center" Stretch="None" RenderTransformOrigin="0.5 0.5">
                                                            <Image.RenderTransform>
                                                                <ScaleTransform x:Name="BtnBgTransform" ScaleX="0" ScaleY="0"/>
                                                            </Image.RenderTransform>
                                                        </Image>

                                                        <Grid x:Name="IconGrid">
                                                            <Image x:Name="icon" Source="{StaticResource Icon_Normal}" HorizontalAlignment="Center" VerticalAlignment="Center" Stretch="None" RenderTransformOrigin="0.5 0.5">
                                                                <Image.RenderTransform>
                                                                    <ScaleTransform x:Name="iconTransform" ScaleX="1" ScaleY="1"/>
                                                                </Image.RenderTransform>
                                                            </Image>
                                                            <Image x:Name="trail" Source="{StaticResource trail}" HorizontalAlignment="Center" VerticalAlignment="Center" Stretch="None" RenderTransformOrigin="0.5 0.5">
                                                                <Image.RenderTransform>
                                                                    <RotateTransform x:Name="trailTransform" Angle="0"/>
                                                                </Image.RenderTransform>
                                                            </Image>
                                                        </Grid>
                                                    </Grid>

                                                    <ControlTemplate.Triggers>
                                                        <Trigger Property="IsMouseOver" Value="True">
                                                            <Setter TargetName="BtnBg" Property="Source" Value="{StaticResource btnHover}"/>
                                                            <Setter TargetName="icon" Property="Source" Value="{StaticResource Icon_Hover}" />
                                                        </Trigger>
                                                        <Trigger Property="IsPressed" Value="True">
                                                            <Setter TargetName="BtnBg" Property="Source" Value="{StaticResource btnPressed}" />
                                                            <Setter TargetName="icon" Property="Source" Value="{StaticResource Icon_Pressed}" />
                                                            <Setter TargetName="icon" Property="Margin" Value="0,4,0,0" />
                                                        </Trigger>
                                                        <Trigger Property="IsEnabled" Value="False">
                                                            <Setter TargetName="BtnBg" Property="Source" Value="{StaticResource btnDisabled}" />
                                                            <Setter TargetName="icon" Property="Opacity" Value="0.7" />
                                                        </Trigger>
                                                        <Trigger Property="IsVisible" Value="True">
                                                            <Trigger.EnterActions>
                                                                <BeginStoryboard x:Name="ChooseRewardAnimation">
                                                                    <Storyboard>
                                                                        <!-- Animations OnStart-->
                                                                        <DoubleAnimation Storyboard.TargetName="BtnBackgroundTransform" Storyboard.TargetProperty="ScaleX" Duration="0:0:0.6" From="1.4" To="1">
                                                                            <DoubleAnimation.EasingFunction>
                                                                                <ElasticEase EasingMode="EaseOut" Oscillations="1"/>
                                                                            </DoubleAnimation.EasingFunction>
                                                                        </DoubleAnimation>
                                                                        <DoubleAnimation Storyboard.TargetName="BtnBackgroundTransform" Storyboard.TargetProperty="ScaleY" Duration="0:0:0.6" From="1.4" To="1">
                                                                            <DoubleAnimation.EasingFunction>
                                                                                <ElasticEase EasingMode="EaseOut" Oscillations="1"/>
                                                                            </DoubleAnimation.EasingFunction>
                                                                        </DoubleAnimation>

                                                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="BtnBgTransform" Storyboard.TargetProperty="ScaleX">
                                                                            <LinearDoubleKeyFrame Value="0" KeyTime="0:0:0.0"/>
                                                                            <LinearDoubleKeyFrame Value="0" KeyTime="0:0:0.4"/>
                                                                            <EasingDoubleKeyFrame Value="1" KeyTime="0:0:0.8">
                                                                                <EasingDoubleKeyFrame.EasingFunction>
                                                                                    <ElasticEase EasingMode="EaseOut" Oscillations="1" Springiness="8"/>
                                                                                </EasingDoubleKeyFrame.EasingFunction>
                                                                            </EasingDoubleKeyFrame>
                                                                        </DoubleAnimationUsingKeyFrames>
                                                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="BtnBgTransform" Storyboard.TargetProperty="ScaleY">
                                                                            <LinearDoubleKeyFrame Value="0" KeyTime="0:0:0.0"/>
                                                                            <LinearDoubleKeyFrame Value="0" KeyTime="0:0:0.4"/>
                                                                            <EasingDoubleKeyFrame Value="1" KeyTime="0:0:0.8">
                                                                                <EasingDoubleKeyFrame.EasingFunction>
                                                                                    <ElasticEase EasingMode="EaseOut" Oscillations="1" Springiness="8"/>
                                                                                </EasingDoubleKeyFrame.EasingFunction>
                                                                            </EasingDoubleKeyFrame>
                                                                        </DoubleAnimationUsingKeyFrames>
                                                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="BtnBg" Storyboard.TargetProperty="Opacity">
                                                                            <LinearDoubleKeyFrame Value="0" KeyTime="0:0:0"/>
                                                                            <LinearDoubleKeyFrame Value="0" KeyTime="0:0:0.4"/>
                                                                            <LinearDoubleKeyFrame Value="1" KeyTime="0:0:0.55"/>
                                                                        </DoubleAnimationUsingKeyFrames>

                                                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="BtnBackground" Storyboard.TargetProperty="Opacity">
                                                                            <LinearDoubleKeyFrame Value="0" KeyTime="0:0:0"/>
                                                                            <LinearDoubleKeyFrame Value="1" KeyTime="0:0:0.2"/>
                                                                        </DoubleAnimationUsingKeyFrames>

                                                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="IconGrid" Storyboard.TargetProperty="Opacity">
                                                                            <LinearDoubleKeyFrame Value="0" KeyTime="0:0:0"/>
                                                                            <LinearDoubleKeyFrame Value="0" KeyTime="0:0:0.6"/>
                                                                            <LinearDoubleKeyFrame Value="1" KeyTime="0:0:0.8"/>
                                                                        </DoubleAnimationUsingKeyFrames>

                                                                        <!-- Animations Forever-->
                                                                        <DoubleAnimation Storyboard.TargetName="trailTransform" Storyboard.TargetProperty="Angle" From="0" To="360" RepeatBehavior="Forever" Duration="0:0:3"/>

                                                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="iconTransform" Storyboard.TargetProperty="ScaleX" RepeatBehavior="Forever">
                                                                            <LinearDoubleKeyFrame Value="1" KeyTime="0:0:0"/>
                                                                            <LinearDoubleKeyFrame Value="1.05" KeyTime="0:0:0.8"/>
                                                                            <LinearDoubleKeyFrame Value="1" KeyTime="0:0:1.6"/>
                                                                        </DoubleAnimationUsingKeyFrames>
                                                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="iconTransform" Storyboard.TargetProperty="ScaleY" RepeatBehavior="Forever">
                                                                            <LinearDoubleKeyFrame Value="1" KeyTime="0:0:0"/>
                                                                            <LinearDoubleKeyFrame Value="1.05" KeyTime="0:0:0.8"/>
                                                                            <LinearDoubleKeyFrame Value="1" KeyTime="0:0:1.6"/>
                                                                        </DoubleAnimationUsingKeyFrames>
                                                                    </Storyboard>
                                                                </BeginStoryboard>
                                                            </Trigger.EnterActions>
                                                            <Trigger.ExitActions>
                                                                <StopStoryboard BeginStoryboardName="ChooseRewardAnimation"/>
                                                            </Trigger.ExitActions>
                                                        </Trigger>
                                                    </ControlTemplate.Triggers>
                                                </ControlTemplate>
                                            </ls:LSButton.Template>
                                        </ls:LSButton>
                                    </Grid>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsVisible" Value="True">
                                            <Trigger.EnterActions>
                                                <BeginStoryboard>
                                                    <Storyboard FillBehavior="Stop">
                                                        <ThicknessAnimation Storyboard.TargetName="BgTop" Storyboard.TargetProperty="Margin" From="0,-20,0,0" To="0,-3,0,0" Duration="0:0:0.3"/>
                                                        <DoubleAnimation Storyboard.TargetName="BgTop" Storyboard.TargetProperty="Opacity" From="0" To="1" Duration="0:0:0.1"/>
                                                        <ThicknessAnimation Storyboard.TargetName="BgBot" Storyboard.TargetProperty="Margin" From="0,0,0,-20" To="0,0,0,-3" Duration="0:0:0.3"/>
                                                        <DoubleAnimation Storyboard.TargetName="BgBot" Storyboard.TargetProperty="Opacity" From="0" To="1" Duration="0:0:0.1"/>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </Trigger.EnterActions>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Control.Template>
                        </Control>

                        <StackPanel Orientation="Vertical">
                            <TextBlock Text="PIZDA" FontSize="50"/>
                            <ItemsControl x:Name="StatusHolder" ls:TooltipExtender.Owner="{Binding Path=DataContext, ElementName=ParentControl}"
                                          ItemsSource="{Binding StatusEffects}" MinHeight="55"
                                          BorderBrush="Transparent" Background="Transparent" HorizontalAlignment="Left">
                                <ItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <VirtualizingStackPanel IsItemsHost="True" Orientation="Horizontal"/>
                                    </ItemsPanelTemplate>
                                </ItemsControl.ItemsPanel>
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate>
                                        <Grid ToolTip="{StaticResource ManagedTooltip}" ToolTipService.IsEnabled="True" ToolTipService.Placement="Right" Width="55" Height="55">
                                            <Image Source="{StaticResource StatusBg}" Stretch="UniformToFill" Width="55" Height="55"/>
                                            <Ellipse Width="42" Height="42" VerticalAlignment="Center" HorizontalAlignment="Center" Fill="{Binding Icon}"/>
                                            <ls:LSPie x:Name="Progression" Value="{Binding RemainingPercentage}" SweepDirection="Clockwise" RenderTransformOrigin="0.5 0.5">
                                                <Image Source="{StaticResource StatusBgFill}" Stretch="UniformToFill" Width="54" Height="54" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                                            </ls:LSPie>
                                            <Label VerticalAlignment="Bottom" HorizontalAlignment="Right" IsHitTestVisible="False" Content="{Binding Duration}"
                                               Margin="0,0,0,0"
                                               Foreground="{StaticResource LS_tint100}" FontWeight="Bold" FontSize="{StaticResource TinyFontSize}"
                                               noesis:Text.Stroke="Black" noesis:Text.StrokeThickness="4" Visibility="{Binding Duration, Converter={StaticResource CountToVisibilityConverter}}"/>
                                        </Grid>
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                            </ItemsControl>

                            <StackPanel Orientation="Horizontal">
                                <ItemsControl x:Name="Followers" Height="165" ItemsSource="{Binding PlayerCharacterProperties.Followers}" ItemTemplate="{StaticResource SummonPortrait}" Background="Transparent"
                                              ScrollViewer.HorizontalScrollBarVisibility="Disabled" ScrollViewer.VerticalScrollBarVisibility="Disabled" BorderBrush="Transparent" Margin="0,0,0,-6"
                                              Visibility="Collapsed" AlternationCount="{Binding PlayerCharacterProperties.Followers.Count}" Panel.ZIndex="1" Tag="200"
                                  VerticalAlignment="Bottom">
                                    <b:Interaction.Behaviors>
                                        <ls:HorizontalCollapseBehavior MaxSpace="{Binding Tag, ElementName=Followers}" SideElementsSizeModifier="0.85" SideElementsSizeModifierRadius="3">
                                            <ls:HorizontalCollapseBehavior.Storyboard>
                                                <Storyboard>
                                                    <!-- From and To will be filled in the behavior -->
                                                    <ThicknessAnimation Storyboard.TargetProperty="Margin" Duration="0:0:0.15">
                                                        <ThicknessAnimation.EasingFunction>
                                                            <CubicEase EasingMode="EaseOut"/>
                                                        </ThicknessAnimation.EasingFunction>
                                                    </ThicknessAnimation>
                                                </Storyboard>
                                            </ls:HorizontalCollapseBehavior.Storyboard>
                                        </ls:HorizontalCollapseBehavior>
                                    </b:Interaction.Behaviors>
                                    <ItemsControl.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <VirtualizingStackPanel IsItemsHost="True" Orientation="Horizontal"/>
                                        </ItemsPanelTemplate>
                                    </ItemsControl.ItemsPanel>
                                    <ItemsControl.ItemContainerStyle>
                                        <Style TargetType="ContentPresenter">
                                            <Setter Property="Panel.ZIndex">
                                                <Setter.Value>
                                                    <MultiBinding Converter="{StaticResource SubtractionMultipleConverter}">
                                                        <Binding Path="AlternationCount" RelativeSource="{RelativeSource AncestorType={x:Type ItemsControl}}"/>
                                                        <Binding Path="(ItemsControl.AlternationIndex)" RelativeSource="{RelativeSource Mode=Self}"/>
                                                        <Binding Source="1"/>
                                                    </MultiBinding>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </ItemsControl.ItemContainerStyle>
                                </ItemsControl>
                                <ItemsControl x:Name="FollowersUnlinked" Height="165" ItemsSource="{Binding PlayerCharacterProperties.FollowersUnlinked}" ItemTemplate="{StaticResource SummonPortrait}" Background="Transparent" ScrollViewer.HorizontalScrollBarVisibility="Disabled" ScrollViewer.VerticalScrollBarVisibility="Disabled" BorderBrush="Transparent" Margin="20,0,0,-6" Visibility="Collapsed" AlternationCount="{Binding FollowersUnlinked.Count}" Tag="200">
                                    <b:Interaction.Behaviors>
                                        <ls:HorizontalCollapseBehavior MaxSpace="{Binding Tag, ElementName=FollowersUnlinked}" SideElementsSizeModifier="0.85" SideElementsSizeModifierRadius="3" MoveFirst="False">
                                            <ls:HorizontalCollapseBehavior.Storyboard>
                                                <Storyboard>
                                                    <!-- From and To will be filled in the behavior -->
                                                    <ThicknessAnimation Storyboard.TargetProperty="Margin" Duration="0:0:0.15">
                                                        <ThicknessAnimation.EasingFunction>
                                                            <CubicEase EasingMode="EaseOut"/>
                                                        </ThicknessAnimation.EasingFunction>
                                                    </ThicknessAnimation>
                                                </Storyboard>
                                            </ls:HorizontalCollapseBehavior.Storyboard>
                                        </ls:HorizontalCollapseBehavior>
                                    </b:Interaction.Behaviors>
                                    <ItemsControl.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <VirtualizingStackPanel IsItemsHost="True" Orientation="Horizontal"/>
                                        </ItemsPanelTemplate>
                                    </ItemsControl.ItemsPanel>
                                    <ItemsControl.ItemContainerStyle>
                                        <Style TargetType="ContentPresenter">
                                            <Setter Property="Panel.ZIndex">
                                                <Setter.Value>
                                                    <MultiBinding Converter="{StaticResource SubtractionMultipleConverter}">
                                                        <Binding Path="AlternationCount" RelativeSource="{RelativeSource AncestorType={x:Type ItemsControl}}"/>
                                                        <Binding Path="(ItemsControl.AlternationIndex)" RelativeSource="{RelativeSource Mode=Self}"/>
                                                        <Binding Source="1"/>
                                                    </MultiBinding>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </ItemsControl.ItemContainerStyle>
                                </ItemsControl>
                            </StackPanel>
                        </StackPanel>
                    </StackPanel>

                    <!-- Toggle all summons -->
                    <ls:LSButton x:Name="ToggleAllSummons" Template="{StaticResource PanelButtonWT}" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="120,10,0,0"
                                 Command="{Binding DataContext.ToggleSummonsLinkCommand, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" CommandParameter="{Binding .}"
                                 Visibility="{Binding PlayerCharacterProperties.HasAnySummon, Converter={StaticResource BoolToVisibleConverter}}" OverwriteClickSound="UI_Gameplay_PartyMember_Group">
                        <ls:LSButton.RenderTransform>
                            <ScaleTransform CenterX="0" CenterY="0" ScaleX="0.75" ScaleY="0.75" />
                        </ls:LSButton.RenderTransform>
                        <ls:LSButton.ToolTip>
                            <ls:LSTooltip Content="{Binding Source='h861b4dc9g3666g4c95g8f44gea717dbf6a9e',Converter={StaticResource TranslatedStringConverter}}"/>
                        </ls:LSButton.ToolTip>
                        <ls:LSButton.Resources>
                            <BitmapImage x:Key="Icon_Normal" UriSource="pack://application:,,,/Core;component/Assets/PlayerPortraits/ico_party_groupAll_d.png" />
                            <BitmapImage x:Key="Icon_Hover" UriSource="pack://application:,,,/Core;component/Assets/PlayerPortraits/ico_party_groupAll_h.png" />
                            <BitmapImage x:Key="Icon_Pressed" UriSource="pack://application:,,,/Core;component/Assets/PlayerPortraits/ico_party_groupAll_d.png" />
                        </ls:LSButton.Resources>
                    </ls:LSButton>
                </Grid>
            </ls:LSContentControl>
        </StackPanel>
        <DataTemplate.Triggers>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding DataContext.CurrentPlayer.UIData.DragData.DraggingGameObjects[0], Converter={StaticResource TypeConverter}, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" Value="ls.Character"/>
                    <Condition Binding="{Binding Path=IsDragOver, ElementName=ParentControl}" Value="True"/>
                    <Condition Binding="{Binding Path=MouseRelativeAbove, ElementName=ParentControl}" Value="True"/>
                </MultiDataTrigger.Conditions>
                <Setter TargetName="ParentControl" Property="Padding" Value="0,200,0,0"/>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding DataContext.CurrentPlayer.UIData.DragData.DraggingGameObjects[0], Converter={StaticResource TypeConverter}, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" Value="ls.Character"/>
                    <Condition Binding="{Binding Path=IsDragOver, ElementName=ParentControl}" Value="True"/>
                    <Condition Binding="{Binding Path=MouseRelativeAbove, ElementName=ParentControl}" Value="False"/>
                </MultiDataTrigger.Conditions>
                <Setter TargetName="ParentControl" Property="Padding" Value="0,0,0,220"/>
            </MultiDataTrigger>
            <!-- Do not add any padding when we're dragging a summon/follower -->
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding DataContext.CurrentPlayer.UIData.DragData.DraggingGameObjects[0], Converter={StaticResource TypeConverter}, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" Value="ls.Character"/>
                    <Condition Binding="{Binding DataContext.CurrentPlayer.UIData.DragData.DraggingGameObjects[0].CharacterType, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" Value="Follower"/>
                </MultiDataTrigger.Conditions>
                <Setter TargetName="ParentControl" Property="Padding" Value="0"/>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding DataContext.CurrentPlayer.UIData.DragData.DraggingGameObjects[0], Converter={StaticResource TypeConverter}, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" Value="ls.Character"/>
                    <Condition Binding="{Binding DataContext.CurrentPlayer.UIData.DragData.DraggingGameObjects[0].CharacterType, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" Value="Summon"/>
                </MultiDataTrigger.Conditions>
                <Setter TargetName="ParentControl" Property="Padding" Value="0"/>
            </MultiDataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Value="False">
                        <Condition.Binding>
                            <MultiBinding Converter="{StaticResource EqualConverter}">
                                <Binding RelativeSource="{RelativeSource AncestorType={x:Type ls:UIWidget}}" Path="DataContext.CurrentPlayer.UserId"/>
                                <Binding Path="PlayerCharacterProperties.OwnerUserID"/>
                            </MultiBinding>
                        </Condition.Binding>
                    </Condition>
                </MultiDataTrigger.Conditions>
                <Setter TargetName="ToggleAllSummons" Property="Visibility" Value="Collapsed"/>
            </MultiDataTrigger>

            <DataTrigger Binding="{Binding Visibility, ElementName=DownedStatus}" Value="Visible">
                <Setter TargetName="CharacterMode" Property="Visibility" Value="Collapsed"/>
            </DataTrigger>

            <DataTrigger Binding="{Binding IsCurrentTurn}" Value="True">
                <Setter TargetName="Frame" Property="Source" Value="pack://application:,,,/Core;component/Assets/PlayerPortraits/portrait_frame_active_inTurn_d.png"/>
                <Setter TargetName="FrameHighlight" Property="Source" Value="pack://application:,,,/Core;component/Assets/PlayerPortraits/portrait_frame_active_inTurn_h.png"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding IsSelectedCharacter}" Value="True">
                <Setter TargetName="Frame" Property="Source" Value="pack://application:,,,/Core;component/Assets/PlayerPortraits/portrait_frame_active_d.png"/>
                <Setter TargetName="FrameHighlight" Property="Source" Value="pack://application:,,,/Core;component/Assets/PlayerPortraits/portrait_frame_active_h.png"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=Tag, ElementName=ParentControl}" Value="False">
                <Setter TargetName="Frame" Property="Source" Value="{StaticResource Portraits.ExtendedFrameRemote}"/>
                <Setter TargetName="FrameHighlight" Property="Source" Value="{StaticResource Portraits.ExtendedFrameHighlightRemote}"/>
            </DataTrigger>

            <DataTrigger Binding="{Binding Path=IsEnabled, ElementName=CameraResetInput}" Value="False">
                <Setter TargetName="SelectCharacterInput" Property="IsEnabled" Value ="True"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding IsSelectedCharacter}" Value="False">
                <Setter TargetName="CameraResetInput" Property="IsEnabled" Value ="False"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding CharacterMode}" Value="InTrade">
                <Setter TargetName="CameraResetInput" Property="IsEnabled" Value ="False"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding CharacterMode}" Value="InDialogue">
                <Setter TargetName="CameraResetInput" Property="IsEnabled" Value ="False"/>
            </DataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding PlayerCharacterProperties.IsReceivingReward}" Value="True"/>
                    <Condition Value="False">
                        <Condition.Binding>
                            <MultiBinding Converter="{StaticResource EqualConverter}">
                                <Binding RelativeSource="{RelativeSource AncestorType={x:Type ls:UIWidget}}" Path="DataContext.CurrentPlayer.UserId"/>
                                <Binding Path="PlayerCharacterProperties.OwnerUserID"/>
                            </MultiBinding>
                        </Condition.Binding>
                    </Condition>
                </MultiDataTrigger.Conditions>
                <Setter TargetName="CheckRewardGrid" Property="Visibility" Value="Visible"/>
            </MultiDataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding CharacterMode}" Value="InDialogue"/>
                    <Condition Value="False">
                        <Condition.Binding>
                            <MultiBinding Converter="{StaticResource EqualConverter}">
                                <Binding RelativeSource="{RelativeSource AncestorType={x:Type ls:UIWidget}}" Path="DataContext.CurrentPlayer.UserId"/>
                                <Binding Path="PlayerCharacterProperties.OwnerUserID"/>
                            </MultiBinding>
                        </Condition.Binding>
                    </Condition>
                    <Condition Value="False">
                        <Condition.Binding>
                            <MultiBinding Converter="{StaticResource EqualConverter}">
                                <Binding Path="DataContext.Data.LocalPlayers.Count" RelativeSource="{RelativeSource AncestorType={x:Type ls:UIWidget}}"/>
                                <Binding Path="DataContext.Data.Players.Count" RelativeSource="{RelativeSource AncestorType={x:Type ls:UIWidget}}"/>
                            </MultiBinding>
                        </Condition.Binding>
                    </Condition>
                </MultiDataTrigger.Conditions>
                <Setter TargetName="CheckRewardGrid" Property="Visibility" Value="Collapsed"/>
                <Setter TargetName="ListenInGrid" Property="Visibility" Value="Visible"/>
            </MultiDataTrigger>
            <DataTrigger Binding="{Binding DataContext.CurrentPlayer.SelectedCharacter.PlayerCharacterProperties.InAutomatedDialogueCount, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}, Converter={StaticResource GreaterThanConverter}, ConverterParameter=0 }" Value="True">
                <Setter TargetName="ListenInGrid" Property="Visibility" Value="Collapsed"/>
            </DataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding ="{Binding Path=OrderIndex,RelativeSource={RelativeSource AncestorType=ls:LSPortraitListItem}}" Value="0"/>
                    <Condition Binding="{Binding Path=Tag, ElementName=ParentControl}" Value="True"/>
                </MultiDataTrigger.Conditions>
                <Setter TargetName="SelectCharacterInput" Property="BoundEvent" Value ="UISelectChar1"/>
                <Setter TargetName="CameraResetInput" Property="BoundEvent" Value ="UISelectChar1"/>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding ="{Binding Path=OrderIndex,RelativeSource={RelativeSource AncestorType=ls:LSPortraitListItem}}" Value="1"/>
                    <Condition Binding="{Binding Path=Tag, ElementName=ParentControl}" Value="True"/>
                </MultiDataTrigger.Conditions>
                <Setter TargetName="SelectCharacterInput" Property="BoundEvent" Value ="UISelectChar2"/>
                <Setter TargetName="CameraResetInput" Property="BoundEvent" Value ="UISelectChar2"/>
                <Setter TargetName="Frame" Property="ls:TutorialProperties.ModalType" Value ="LeftBottom"/>
                <Setter TargetName="Frame" Property="ls:TutorialProperties.TargetID" Value ="TUT_Recruitment"/>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding ="{Binding Path=OrderIndex,RelativeSource={RelativeSource AncestorType=ls:LSPortraitListItem}}" Value="2"/>
                    <Condition Binding="{Binding Path=Tag, ElementName=ParentControl}" Value="True"/>
                </MultiDataTrigger.Conditions>
                <Setter TargetName="SelectCharacterInput" Property="BoundEvent" Value ="UISelectChar3"/>
                <Setter TargetName="CameraResetInput" Property="BoundEvent" Value ="UISelectChar3"/>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding ="{Binding Path=OrderIndex,RelativeSource={RelativeSource AncestorType=ls:LSPortraitListItem}}" Value="3"/>
                    <Condition Binding="{Binding Path=Tag, ElementName=ParentControl}" Value="True"/>
                </MultiDataTrigger.Conditions>
                <Setter TargetName="SelectCharacterInput" Property="BoundEvent" Value ="UISelectChar4"/>
                <Setter TargetName="CameraResetInput" Property="BoundEvent" Value ="UISelectChar4"/>
            </MultiDataTrigger>

            <DataTrigger Binding="{Binding DownedInfo.Active}" Value="True">
                <Setter TargetName="DownedStatus" Property="Visibility" Value="Visible"/>
                <Setter TargetName="DownedBg" Property="Visibility" Value="Visible"/>
            </DataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding DownedInfo.Active}" Value="False"/>
                    <Condition Binding="{Binding Stats.Health.Value}" Value="0"/>
                </MultiDataTrigger.Conditions>
                <Setter TargetName="DownedStatus" Property="Visibility" Value="Visible"/>
                <Setter TargetName="DownedStatusIcon" Property="Source" Value="pack://application:,,,/Core;component/Assets/PlayerPortraits/ico_dead.png"/>
                <Setter TargetName="SuccessI" Property="Visibility" Value="Collapsed"/>
                <Setter TargetName="SuccessII" Property="Visibility" Value="Collapsed"/>
                <Setter TargetName="SuccessIII" Property="Visibility" Value="Collapsed"/>
                <Setter TargetName="FailureI" Property="Visibility" Value="Collapsed"/>
                <Setter TargetName="FailureII" Property="Visibility" Value="Collapsed"/>
                <Setter TargetName="FailureIII" Property="Visibility" Value="Collapsed"/>
            </MultiDataTrigger>
            <DataTrigger Binding="{Binding DownedInfo.RollSuccesses, Converter={StaticResource GreaterThanConverter}, ConverterParameter=0 }" Value="True">
                <Setter TargetName="SuccessI" Property="Source" Value="{StaticResource SuccessActive}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding DownedInfo.RollSuccesses, Converter={StaticResource GreaterThanConverter}, ConverterParameter=1 }" Value="True">
                <Setter TargetName="SuccessII" Property="Source" Value="{StaticResource SuccessActive}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding DownedInfo.RollSuccesses, Converter={StaticResource GreaterThanConverter}, ConverterParameter=2 }" Value="True">
                <Setter TargetName="SuccessIII" Property="Source" Value="{StaticResource SuccessActive}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding DownedInfo.RollFailures, Converter={StaticResource GreaterThanConverter}, ConverterParameter=0 }" Value="True">
                <Setter TargetName="FailureI" Property="Source" Value="{StaticResource FailureActive}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding DownedInfo.RollFailures, Converter={StaticResource GreaterThanConverter}, ConverterParameter=1 }" Value="True">
                <Setter TargetName="FailureII" Property="Source" Value="{StaticResource FailureActive}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding DownedInfo.RollFailures, Converter={StaticResource GreaterThanConverter}, ConverterParameter=2 }" Value="True">
                <Setter TargetName="FailureIII" Property="Source" Value="{StaticResource FailureActive}"/>
            </DataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding PlayerCharacterProperties.Followers.Count, Converter={StaticResource GreaterThanConverter}, ConverterParameter=0}" Value="True"/>
                    <Condition Binding="{Binding PlayerCharacterProperties.FollowersUnlinked.Count, Converter={StaticResource GreaterThanConverter}, ConverterParameter=0}" Value="True"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter TargetName="Followers" Property="Tag" Value="100"/>
                    <Setter TargetName="FollowersUnlinked" Property="Tag" Value="100"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding DataContext.CurrentPlayer.UIData.InPlayerPanels, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}, FallbackValue=False}" Value="False"/>
                    <Condition Binding="{Binding PlayerCharacterProperties.Followers.Count, Converter={StaticResource GreaterThanConverter}, ConverterParameter=0}" Value="True"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter TargetName="Followers" Property="Visibility" Value="Visible"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding DataContext.CurrentPlayer.UIData.InPlayerPanels, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}, FallbackValue=False}" Value="False"/>
                    <Condition Binding="{Binding PlayerCharacterProperties.FollowersUnlinked.Count, Converter={StaticResource GreaterThanConverter}, ConverterParameter=0}" Value="True"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter TargetName="FollowersUnlinked" Property="Visibility" Value="Visible"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>

            <DataTrigger Binding="{Binding Stats.Level.LevelUpAvailable}" Value="False">
                <Setter TargetName="LevelUpButton" Property="Visibility" Value="Collapsed"/>
            </DataTrigger>

            <DataTrigger Binding="{Binding CharacterMode}" Value="InCombat">
                <Setter TargetName="LevelUpButton" Property="Visibility" Value="Collapsed"/>
            </DataTrigger>

            <DataTrigger Binding="{Binding DownedInfo.Active}" Value="True">
                <Setter TargetName="LevelUpButton" Property="Visibility" Value="Collapsed"/>
            </DataTrigger>

            <DataTrigger Binding="{Binding Stats.IsAlive}" Value="False">
                <Setter TargetName="LevelUpButton" Property="Visibility" Value="Collapsed"/>
            </DataTrigger>

            <DataTrigger Binding="{Binding Visibility, ElementName=ConcentrationHolder}" Value="Visible">
                <Setter TargetName="LevelUpButton" Property="Margin" Value="0,80,0,0"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding DataContext.CurrentPlayer.UIData.ActiveState, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" Value="PartyPanel">
                <Setter TargetName="StatusHolder"  Property="Visibility" Value="Collapsed"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding CharacterType}" Value="Avatar">
                <Setter TargetName="AvatarCrown" Property="Visibility" Value="Visible"/>
            </DataTrigger>

        </DataTemplate.Triggers>
    </DataTemplate>


</ResourceDictionary>