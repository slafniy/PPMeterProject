Version 1
SubGoalCombiner SGC_AND
INITSECTION
// PPMeter mod by slafniy
// An attempt to re-create Recount :) kinda...


// Data Lifetime enum
DB_PPMeter_Lifetime("Round");
DB_PPMeter_Lifetime("Combat");
DB_PPMeter_Lifetime("Day");
DB_PPMeter_Lifetime("Level");
DB_PPMeter_Lifetime("Act");
DB_PPMeter_Lifetime("Overall");

// Data stats type enum
DB_PPMeter_StatsType("Damage");
DB_PPMeter_StatsType("RoundsCount");

// INTEGER Tables (CHARACTER)_Character, (STRING)_Lifetime, (STRING)_StatsType, (INTEGER)_Value
NOT DB_PPMeter_DataInteger((CHARACTER)NULL_00000000-0000-0000-0000-000000000000, "", "", 0);
KBSECTION
// Set accumulated data to zero for given character and lifetime for each StatsType
// Reset DB_PPMeter_DataInteger
//REGION PROC_Reset_LifetimeData
PROC
PROC_Reset_LifetimeData((CHARACTER)_Character, (STRING)_Lifetime)
AND
DB_PPMeter_Lifetime(_Lifetime)  // making sure it exists in DB_PPMeter_Lifetime enum
AND
DB_PPMeter_StatsType(_StatsType)  // making sure it exists in DB_PPMeter_StatsType enum
AND
DB_PPMeter_DataInteger(_Character, _Lifetime, _StatsType, _Value)
THEN
NOT DB_PPMeter_DataInteger(_Character, _Lifetime, _StatsType, _Value);
DB_PPMeter_DataInteger(_Character, _Lifetime, _StatsType, 0);
//END_REGION

//REGION PROC_OnlyOnceCreateDBs
PROC
PROC_OnlyOnceCreateDBs((CHARACTER)_Character)
AND
QRY_OnlyOnce("PPMeterDBsAreInitialized_fb453031-6bdd-49af-b8d9-ca88d42b0bb7")
AND
DB_PartyMembers(_Character)
AND
DB_PPMeter_Lifetime(_Lifetime)
AND
DB_PPMeter_StatsType(_StatsType)
AND
Concatenate(_Lifetime, _StatsType, _LifetimeStatsType)
AND
_LifetimeStatsType != "RoundRoundsCount"  // Pretty sure each round lasts only one round
THEN 
DB_PPMeter_DataInteger(_Character, _Lifetime, _StatsType, 0);
//END_REGION

//REGION PROC_PPMeter_AddInteger
PROC
PROC_PPMeter_AddInteger((CHARACTER)_Character, (STRING)_Lifetime, (STRING)_StatsType, (INTEGER)_Value)
AND
DB_PPMeter_DataInteger(_Character, _Lifetime, _StatsType, _OldValue)
AND
IntegerSum(_OldValue, _Value, _NewValue)
THEN
NOT DB_PPMeter_DataInteger(_Character, _Lifetime, _StatsType, _OldValue);
DB_PPMeter_DataInteger(_Character, _Lifetime, _StatsType, _NewValue);
//END_REGION

//REGION Handle damage dealt
IF
AttackedBy((GUIDSTRING)_Defender, (CHARACTER)_AttackerOwner, (GUIDSTRING)_Attacker, (STRING)_DamageType, (INTEGER)_DamageAmount, (STRING)_DamageCause, (INTEGER)_StoryActionID)
AND
DB_PartyMembers(_AttackerOwner)
AND
_DamageAmount > 0
AND
DB_PPMeter_Lifetime(_Lifetime)  // Apply damage to every lifetime
THEN
PROC_PPMeter_AddInteger(_AttackerOwner, (STRING)_Lifetime, "Damage", _DamageAmount);
//END_REGION

//REGION Handle turn start - count rounds
IF
TurnStarted((CHARACTER)_Character)  // Round == Turn in case of each character I suppose
AND
DB_PartyMembers(_Character)
AND
DB_PPMeter_Lifetime(_Lifetime)
THEN
PROC_PPMeter_AddInteger(_Character, _Lifetime, "RoundsCount", 1);
//END_REGION

//REGION On Long Rest
IF
LongRestFinished()
AND
DB_PartOfTheTeam(_Character)  // not DB_PartyMembers because we want to handle camp fellas too
THEN
PROC_Reset_LifetimeData(_Character, "Day");
//END_REGION

//REGION On leveled up reset damage on level
IF
LeveledUp((CHARACTER)_Character)
AND
DB_PartyMembers(_Character)
THEN
PROC_Reset_LifetimeData(_Character, "Level");
//END_REGION

//REGION On new combat set DB total damage to 0 and ensure DBs per level, overall and day exists
IF
EnteredCombat((CHARACTER)_Character, _)
AND
DB_PartyMembers(_Character)
THEN
PROC_OnlyOnceCreateDBs(_Character);
PROC_Reset_LifetimeData(_Character, "Combat");
DebugText(_Character, "Calling PROC_Reset_LifetimeData");
//END_REGION

//REGION ShowOff spell casted but no damage records yet
IF
CastedSpell(_Character, "PPMeterShowOff", _, _, _)
AND
NOT DB_PPMeter_DataInteger((CHARACTER)_Character, _, _, _)
THEN
DebugText(_Character, "I need to fight some enemy first");
//END_REGION

//REGION Add PPMeterBOOST to each party member if it does not have it (gives Show Off spell)
IF
DB_PartyMembers((CHARACTER)_Character)
AND
HasSpell(_Character, "PPMeterShowOff", 0)
THEN
AddSpell(_Character, "PPMeterShowOff", 1);
//END_REGION

//REGION ShowOff spell casted - make caster say its stats
IF
CastedSpell(_Character, "PPMeterShowOff", _, _, _)
AND
DB_PPMeter_DataInteger((CHARACTER)_Character, _Lifetime, _StatsType, _Value)
AND
Concatenate(_Lifetime, " ", _msg1)
AND
Concatenate(_msg1, _StatsType, _msg2)
AND
Concatenate(_msg2, ": ", _msg3)
AND
ConcatenateInteger(_msg3, _Value, _msg)
THEN
DebugText(_Character, _msg);
//END_REGION
EXITSECTION

ENDEXITSECTION
ParentTargetEdge "Start"
