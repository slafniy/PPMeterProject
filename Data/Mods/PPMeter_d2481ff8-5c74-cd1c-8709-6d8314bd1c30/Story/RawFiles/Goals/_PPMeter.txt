Version 1
SubGoalCombiner SGC_AND
INITSECTION
// An attempt to re-create Recount :) kinda...

// Store this data to calculate damage:
// 1. For each party member store damage dealt   per combat   DB_PPMeter_LastCombatTotalDamage((CHARACTER)_Character, (INTEGER)_Damage)
// 2.                                             per level   DB_PPMeter_LastLevelTotalDamage((CHARACTER)_Character, (INTEGER)_Damage)
// 3.                                               overall   DB_PPMeter_OverallDamage((CHARACTER)_Character, (INTEGER)_Damage)

// And this data to calculate average DPR (damage per round)
// 4. For each party member store combat rounds completed count  per combat   DB_PPMeter_LastCombatRounds((CHARACTER)_Character, (INTEGER)_Count)
// 5.                                                             per level   DB_PPMeter_LastLevelRounds((CHARACTER)_Character, (INTEGER)_Count)
// 6.                                                               overall   DB_PPMeter_OverallRounds((CHARACTER)_Character, (INTEGER)_Count)
KBSECTION
//REGION PROC_PPMeter_CreateCombatToltalIfNeeded
PROC
PROC_PPMeter_CreateCombatToltalIfNeeded((CHARACTER)_Character)
AND
NOT DB_PPMeter_LastCombatTotalDamage(_Character, _)
THEN
DB_PPMeter_LastCombatTotalDamage(_Character, 0);
//DebugText(_Character, "NEW DB");
//END_REGION

//REGION PROC_PPMeter_SetCombatToltalToZero
PROC
PROC_PPMeter_SetCombatToltalToZero((CHARACTER)_Character)
AND
DB_PPMeter_LastCombatTotalDamage(_Character, _Damage)
THEN
NOT DB_PPMeter_LastCombatTotalDamage(_Character, _Damage);
DB_PPMeter_LastCombatTotalDamage(_Character, 0);
//DebugText(_Character, "ZERO");
//END_REGION

//REGION PROC_PPMeter_AddDamage
PROC
PROC_PPMeter_AddDamage((CHARACTER)_Character, (INTEGER)_Damage)
AND
DB_PPMeter_LastCombatTotalDamage((CHARACTER)_Character, (INTEGER)_DamageTotal)
AND
IntegerSum(_Damage, _DamageTotal, _NewTotal)
AND
ConcatenateInteger("Total: ", _NewTotal, _msg)
THEN
NOT DB_PPMeter_LastCombatTotalDamage((CHARACTER)_Character, (INTEGER)_DamageTotal);
DB_PPMeter_LastCombatTotalDamage((CHARACTER)_Character, (INTEGER)_NewTotal);

DebugText(_Character, _msg);
//END_REGION

//REGION Add PPMeterToggleable passive to each party member if it does not have it
IF
DB_PartyMembers((CHARACTER)_Character)
AND
HasPassive(_Character, "PPMeterToggleable", 0)
THEN
AddPassive(_Character, "PPMeterToggleable");
//END_REGION

//REGION On new combat set DB total damage to 0 or create DB
IF
EnteredCombat((CHARACTER)_Character, _)
AND
DB_PartyMembers(_Character)
THEN
PROC_PPMeter_CreateCombatToltalIfNeeded(_Character);
PROC_PPMeter_SetCombatToltalToZero(_Character);
//END_REGION

//REGION Handle damage dealt
IF
AttackedBy((GUIDSTRING)_Defender, (CHARACTER)_AttackerOwner, (GUIDSTRING)_Attacker, (STRING)_DamageType, (INTEGER)_DamageAmount, (STRING)_DamageCause, (INTEGER)_StoryActionID)
AND
DB_PartyMembers(_AttackerOwner)
AND
_DamageAmount > 0
AND
ConcatenateInteger("Vlomil ", _DamageAmount, _msg1)
AND
Concatenate(_msg1, " damagi ", _msg2)
AND
Concatenate(_msg2, " ot ", _msg3)
AND
Concatenate(_msg3, _DamageCause, _msg)
THEN
PROC_PPMeter_AddDamage((CHARACTER)_AttackerOwner, (INTEGER)_DamageAmount);
//DebugText(_AttackerOwner, _msg);
//END_REGION

//REGION For debugging - make everyone say their stats
IF
TextEvent("pp")
AND
DB_PPMeter_LastCombatTotalDamage((CHARACTER)_Character, (INTEGER)_Damage)
AND
DB_PartyMembers(_Character)
AND
ConcatenateInteger("My damage in combat is ", _Damage, _msg)
THEN
DebugText(_Character, _msg);
//END_REGION

//REGION ShowOff spell casted - make caster say its stats
IF
CastedSpell(_Character, "PPMeterShowOff", _, _, _)
AND
DB_PPMeter_LastCombatTotalDamage((CHARACTER)_Character, (INTEGER)_Damage)
AND
ConcatenateInteger("My damage in combat is ", _Damage, _msg)
THEN
DebugText(_Character, _msg);
//END_REGION

EXITSECTION

ENDEXITSECTION
ParentTargetEdge "Start"
