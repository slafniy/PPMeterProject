Version 1
SubGoalCombiner SGC_AND
INITSECTION
// PPMeter mod by slafniy
// An attempt to re-create Recount :) kinda...


// Data Lifetime enum
//DB_PPMeter_Lifetime("Round");
DB_PPMeter_Lifetime("Combat");
DB_PPMeter_Lifetime("Day");
DB_PPMeter_Lifetime("Level");
//DB_PPMeter_Lifetime("Act");
DB_PPMeter_Lifetime("Overall");

// Data stats type enum
DB_PPMeter_StatsType("Damage");
DB_PPMeter_StatsType("RoundsCount");

// INTEGER Tables DB_PPMeter_DataInteger (CHARACTER)_Character, (STRING)_Lifetime, (STRING)_StatsType, (INTEGER)_Value


KBSECTION
//REGION On new combat - reset per-combat stats for each StatsType
IF
EnteredCombat((CHARACTER)_Character, _)
AND
DB_PartyMembers(_Character)
AND
DB_PPMeter_StatsType(_StatsName)
THEN
PROC_ClearDB((CHARACTER)_Character, "Combat", (STRING)_StatsName);
//END_REGION


//REGION On leveled up - reset per Level stats
IF
LeveledUp((CHARACTER)_Character)
AND
DB_PartyMembers(_Character)
AND
DB_PPMeter_StatsType(_StatsName)
THEN
PROC_ClearDB((CHARACTER)_Character, "Level", (STRING)_StatsName);
//END_REGION


//REGION Handle turn end - count rounds 
// Note: cannot count on round start because it races with EnteredCombat event in case if player joined to existing fight
IF
TurnEnded((CHARACTER)_Character)  // Round == Turn in case of each character I suppose
AND
DB_PartyMembers(_Character)
AND
DB_PPMeter_Lifetime(_Lifetime)
AND
_Lifetime != "Round"  // Its always 1 round in each round
THEN
PROC_PPMeterIncrement((CHARACTER)_Character, _Lifetime, "RoundsCount");
//END_REGION


//REGION Handle damage dealt
IF
AttackedBy((GUIDSTRING)_Defender, (CHARACTER)_AttackerOwner, (GUIDSTRING)_Attacker, (STRING)_DamageType, (INTEGER)_DamageAmount, (STRING)_DamageCause, (INTEGER)_StoryActionID)
AND
DB_PartyMembers(_AttackerOwner)
AND
_DamageAmount > 0
AND
DB_PPMeter_Lifetime(_Lifetime)  // Apply damage to every lifetime
THEN
PROC_PPMeterAdd(_AttackerOwner, _Lifetime, "Damage", _DamageAmount);
//PROC_UpdateCombatDamageInUI(_AttackerOwner);
//END_REGION


//REGION On Long Rest
IF
LongRestFinished()
AND
DB_PartOfTheTeam(_Character)  // not DB_PartyMembers because we want to handle camp fellas too
AND
DB_PPMeter_StatsType(_StatsName)
THEN
PROC_ClearDB(_Character, "Day", _StatsName);
//END_REGION


/*//REGION PROC_UpdateCombatDamageInUI
PROC 
PROC_UpdateCombatDamageInUI((CHARACTER)_Character)
AND
DB_PPMeter_DataInteger(_Character, "Combat", "Damage", _Value)
THEN
PROC_WriteNumberInUI(_Character, _Value);
//END_REGION*/
EXITSECTION

ENDEXITSECTION
ParentTargetEdge "Start"
