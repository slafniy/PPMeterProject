Version 1
SubGoalCombiner SGC_AND
INITSECTION
// Status - PositionInString - Lifetime
DB_PPMeter_DamageStatuses("PPMeter_DamageCombat_d1", 1, "Combat");
DB_PPMeter_DamageStatuses("PPMeter_DamageCombat_d2", 2, "Combat");
DB_PPMeter_DamageStatuses("PPMeter_DamageCombat_d3", 3, "Combat");
DB_PPMeter_DamageStatuses("PPMeter_DamageCombat_d4", 4, "Combat");
DB_PPMeter_DamageStatuses("PPMeter_DamageCombat_d5", 5, "Combat");
DB_PPMeter_DamageStatuses("PPMeter_DamageCombat_d6", 6, "Combat");
DB_PPMeter_DamageStatuses("PPMeter_DamageCombat_d7", 7, "Combat");

DB_PPMeter_DamageStatuses("PPMeter_DamageOverall_d1", 1, "Overall");
DB_PPMeter_DamageStatuses("PPMeter_DamageOverall_d2", 2, "Overall");
DB_PPMeter_DamageStatuses("PPMeter_DamageOverall_d3", 3, "Overall");
DB_PPMeter_DamageStatuses("PPMeter_DamageOverall_d4", 4, "Overall");
DB_PPMeter_DamageStatuses("PPMeter_DamageOverall_d5", 5, "Overall");
DB_PPMeter_DamageStatuses("PPMeter_DamageOverall_d6", 6, "Overall");
DB_PPMeter_DamageStatuses("PPMeter_DamageOverall_d7", 7, "Overall");

// Converter from digit we want in UI to Duration
// In XAML "Duration" binding values are integers calculated as Duration / 6 sec (one game turn time)
// So e.g. -600 will be -100 in GUI, -648 translates into -108
// For each lifetime using its own duration range
DB_PPMeter_DigitStrToDuration("0", -600.0, "Combat");
DB_PPMeter_DigitStrToDuration("1", -606.0, "Combat");
DB_PPMeter_DigitStrToDuration("2", -612.0, "Combat");
DB_PPMeter_DigitStrToDuration("3", -618.0, "Combat");
DB_PPMeter_DigitStrToDuration("4", -624.0, "Combat");
DB_PPMeter_DigitStrToDuration("5", -630.0, "Combat");
DB_PPMeter_DigitStrToDuration("6", -636.0, "Combat");
DB_PPMeter_DigitStrToDuration("7", -642.0, "Combat");
DB_PPMeter_DigitStrToDuration("8", -648.0, "Combat");
DB_PPMeter_DigitStrToDuration("9", -654.0, "Combat");

DB_PPMeter_DigitStrToDuration("0", -660.0, "Overall");
DB_PPMeter_DigitStrToDuration("1", -666.0, "Overall");
DB_PPMeter_DigitStrToDuration("2", -672.0, "Overall");
DB_PPMeter_DigitStrToDuration("3", -678.0, "Overall");
DB_PPMeter_DigitStrToDuration("4", -684.0, "Overall");
DB_PPMeter_DigitStrToDuration("5", -690.0, "Overall");
DB_PPMeter_DigitStrToDuration("6", -696.0, "Overall");
DB_PPMeter_DigitStrToDuration("7", -702.0, "Overall");
DB_PPMeter_DigitStrToDuration("8", -708.0, "Overall");
DB_PPMeter_DigitStrToDuration("9", -714.0, "Overall");
KBSECTION
//REGION Write  damage to statuses
PROC
PROC_WriteDamageStatuses((CHARACTER)_Character, (STRING)_Lifetime, (INTEGER)_Number)
AND
IntegerToString(_Number, _NumberStr)
THEN
PROC_ClearDamageStatuses(_Character, _Lifetime);
PROC_WriteOneByOne(_Character, _Lifetime, _NumberStr);

PROC
PROC_WriteOneByOne((CHARACTER)_Character, (STRING)_Lifetime, (STRING)_NumberStr)
AND
DB_PPMeter_DamageStatuses(_Status, _Start, _Lifetime)
AND
Substring(_NumberStr, _Start, 1, _DigitStr)
AND
_DigitStr != ""
AND
DB_PPMeter_DigitStrToDuration(_DigitStr, _Duration, _Lifetime)
THEN
ApplyStatus(_Character, _Status, _Duration, 1, _Character);
//END_REGION

//REGION clear statuses for given lifetime
PROC
PROC_ClearDamageStatuses((CHARACTER)_Character, (STRING)_Lifetime)
AND
DB_PPMeter_DamageStatuses(_Status, _, _Lifetime)
AND
HasAppliedStatus(_Character, _Status, 1)
THEN
RemoveStatus(_Character, _Status, _Character);
//END_REGION


//REGION Add Show Off spell to each party member if it does not have it
IF
CastedSpell(_Character, _, _, _, _)
AND
DB_PartyMembers((CHARACTER)_Character)
AND
HasSpell(_Character, "PPMeterShowOff", 0)
THEN
AddSpell(_Character, "PPMeterShowOff", 1);
DebugText(_Character, "I can Show Off now!");
//END_REGION

//REGION ShowOff spell casted TODO: remove/comment in release
IF
CastedSpell(_Character, "PPMeterShowOff", _, _, _)
AND
DB_PPMeter_DataInteger((CHARACTER)_Character, _Lifetime, "Damage", _Val1)
AND
DB_PPMeter_DataInteger((CHARACTER)_Character, _Lifetime, "RoundsCount", _Val2)
AND
Concatenate(_Lifetime, " Rounds: ", _msg1)
AND
ConcatenateInteger(_msg1, _Val2, _msg2)
AND
Concatenate(_msg2, " Damage: " , _msg3)
AND
ConcatenateInteger(_msg3, _Val1, _msg)
AND
IntegerToReal(_Val1, _Val1Real)
THEN
DebugText(_Character, _msg);


IF
CastedSpell(_Character, "PPMeterShowOff", _, _, _)
AND
NOT DB_PPMeter_DataInteger((CHARACTER)_Character, _, "Damage", _)
THEN
DebugText(_Character, "I need to hit someone first!");

IF
CastedSpell(_Character, "PPMeterShowOff", _, _, _)
AND
NOT DB_PPMeter_DataInteger((CHARACTER)_Character, _, "RoundsCount", _)
THEN
DebugText(_Character, "I need to end turn first!");
//END_REGION


//REGION Update UI damage(set statuses)
IF
DB_PPMeter_DataInteger(_Character, _LifeTime, _StatsName, _Value)
AND
_StatsName == "Damage"
/*AND
ConcatenateGUID("Updating damage ", _Character, _msg1)
AND
Concatenate(_msg1, " ", _msg2)
AND
Concatenate(_msg2, _Lifetime, _msg3)
AND
Concatenate(_msg3, " ", _msg4)
AND
ConcatenateInteger(_msg4, _Value, _msg) */
THEN
PROC_WriteDamageStatuses(_Character, _LifeTime, _Value);
//DebugText(_Character, _msg);
//END_REGION







EXITSECTION

ENDEXITSECTION
ParentTargetEdge "Start"
