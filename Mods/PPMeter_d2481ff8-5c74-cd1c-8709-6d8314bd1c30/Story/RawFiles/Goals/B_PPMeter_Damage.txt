Version 1
SubGoalCombiner SGC_AND
INITSECTION
DB_PPMeter_TurnStartedTimerPrefix("PPMeterTurnStartedTimer_");
DB_PPMeter_TurnStartedTimerDelayMs(250);
KBSECTION
//REGION // handle TurnEnded - count rounds
IF
TurnStarted((CHARACTER)_Character)
AND
DB_PPMeter_TurnStartedTimerPrefix(_Prefix)
AND
ConcatenateGUID(_Prefix, _Character, _TimerStr)
AND
DB_PPMeter_TurnStartedTimerDelayMs(_Delay)
THEN
RealtimeObjectTimerLaunch(_Character, _TimerStr, _Delay);

IF
ObjectTimerFinished((CHARACTER)_Character, _TimerStr)
AND
IsInCombat(_Character, 1)  // rounds++ only if entity is still in combat
AND
DB_PPMeter_TurnStartedTimerPrefix(_Prefix)
AND
ConcatenateGUID(_Prefix, _Character, _TimerStr)  // if strings match
THEN
PROC_PPMeter_ProcessTurnStartedWithDelay(_Character);

PROC
PROC_PPMeter_ProcessTurnStartedWithDelay((CHARACTER)_Character)
AND
DB_PartyMembers(_Character)
AND
DB_PPMeter_Lifetime(_Lifetime)
THEN
PROC_PPMeterAdd(_Character, _Lifetime, "RoundsCount", 1.0);
//END_REGION


//REGION // handle AttackedBy - count damage dealt
IF
AttackedBy((GUIDSTRING)_Defender, (CHARACTER)_AttackerOwner, (GUIDSTRING)_Attacker, (STRING)_DamageType, (INTEGER)_DamageAmount, (STRING)_DamageCause, (INTEGER)_StoryActionID)
AND
DB_PartyMembers(_AttackerOwner)
AND
_DamageAmount > 0.0
AND
IsEnemy(_AttackerOwner, (CHARACTER)_Defender, 1)
AND
DB_PPMeter_Lifetime(_Lifetime)  // Apply damage to every lifetime
AND
IntegerToReal(_DamageAmount, _DamageAmountReal)
THEN
PROC_PPMeterAdd(_AttackerOwner, _Lifetime, "Damage", _DamageAmountReal);
//END_REGION


//REGION // handle AttackedBy - count damage taken
IF
AttackedBy((GUIDSTRING)_Defender, (CHARACTER)_AttackerOwner, (GUIDSTRING)_Attacker, (STRING)_DamageType, (INTEGER)_DamageAmount, (STRING)_DamageCause, (INTEGER)_StoryActionID)
AND
DB_PartyMembers((CHARACTER)_Defender)
AND
_DamageAmount > 0.0
AND
IsEnemy((CHARACTER)_Defender, _AttackerOwner, 1)
AND
DB_PPMeter_Lifetime(_Lifetime)  // Apply damage taken to every lifetime
AND
IntegerToReal(_DamageAmount, _DamageAmountReal)
THEN
PROC_PPMeterAdd((CHARACTER)_Defender, _Lifetime, "DamageTaken", _DamageAmountReal);
//END_REGION
EXITSECTION

ENDEXITSECTION
ParentTargetEdge "Start"
